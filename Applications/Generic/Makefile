#
#  Makefile for Generic
#
#  ** This file was automatically generated by the command:
#  opp_makemake -f -n -r -c ../../ipsuiteconfig -I../../Network/IPv4/Core -I../../Util
#

# Name of target to be created (-o option)
TARGET = Generic

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# uncomment 1 of the 3 lines to support either serial or parallel operation
KERNEL_LIBS=$(STD_KERNEL_LIBS)
# KERNEL_LIBS=$(PVM_KERNEL_LIBS)
# KERNEL_LIBS=$(MPI_KERNEL_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I../../Network/IPv4/Core -I../../Util

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------
# Import generic settings from ../../ipsuiteconfig
include ../../ipsuiteconfig

#------------------------------------------------------------------------------

# subdirectories to recurse into
SUBDIRS= 

# object files in this directory
OBJS= TrafficGen_n.o  AppIn.o BurstGenerator.o ConstTrafficGen.o SimpleApp.o 

#------------------------------------------------------------------------------

$(TARGET): $(OBJS) subdirs Makefile
	

purify: $(OBJS) $(EXTRA_OBJS) subdirs Makefile
	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

.PHONY: subdirs $(SUBDIRS)

subdirs: $(SUBDIRS)

TrafficGen_n.o: TrafficGen_n.cc
	$(CXX) -c $(NEDCOPTS) TrafficGen_n.cc

TrafficGen_n.cc: TrafficGen.ned
	$(NEDC) $(INCLUDE_PATH) TrafficGen.ned

AppIn.o: AppIn.cc
	$(CXX) -c $(COPTS) AppIn.cc

BurstGenerator.o: BurstGenerator.cc
	$(CXX) -c $(COPTS) BurstGenerator.cc

ConstTrafficGen.o: ConstTrafficGen.cc
	$(CXX) -c $(COPTS) ConstTrafficGen.cc

SimpleApp.o: SimpleApp.cc
	$(CXX) -c $(COPTS) SimpleApp.cc


doc: neddoc doxy

neddoc:
	opp_neddoc -a

doxy: doxy.cfg
	doxygen doxy.cfg

clean:
	rm -f *.o *_n.cc *_n.h *_m.cc *_m.h $(TARGET)$(EXE_SUFFIX)
	rm -f *.vec *.sca
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) clean); done 

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -- *.cc
	# $(MAKEDEPEND) $(INCLUDE_PATH) -fMakefile.in -- *.cc

re-makemake:
	opp_makemake -f  -n -r -c ../../ipsuiteconfig -I../../Network/IPv4/Core -I../../Util   #recreate Makefile

re-makemake-m:
	opp_makemake -f -m  -n -r -c ../../ipsuiteconfig -I../../Network/IPv4/Core -I../../Util   #recreate Makefile.in


# DO NOT DELETE THIS LINE -- make depend depends on it.
AppIn.o: AppIn.cc \
  AppIn.h \
  ../../Network/IPv4/Core/IPInterfacePacket.h \
  ../../Network/IPv4/Core/IPDatagram.h \
  ../../Network/IPv4/Core/ICMP.h \
  ../../Util/basic_consts.h \
  ../../Network/IPv4/Core/RoutingTableAccess.h \
  ../../Util/ProcessorAccess.h \
  ../../Network/IPv4/Core/RoutingTable.h \
  ../../Network/IPv4/Core/ip_address.h
BurstGenerator.o: BurstGenerator.cc \
  BurstGenerator.h \
  ../../Network/IPv4/Core/IPInterfacePacket.h \
  ../../Network/IPv4/Core/IPDatagram.h \
  ../../Network/IPv4/Core/ICMP.h \
  ../../Util/basic_consts.h \
  ../../Network/IPv4/Core/RoutingTableAccess.h \
  ../../Util/ProcessorAccess.h \
  ../../Network/IPv4/Core/RoutingTable.h \
  ../../Network/IPv4/Core/ip_address.h
ConstTrafficGen.o: ConstTrafficGen.cc \
  ConstTrafficGen.h \
  ../../Network/IPv4/Core/IPInterfacePacket.h \
  ../../Network/IPv4/Core/IPDatagram.h \
  ../../Network/IPv4/Core/ICMP.h \
  ../../Util/basic_consts.h \
  ../../Network/IPv4/Core/RoutingTableAccess.h \
  ../../Util/ProcessorAccess.h \
  ../../Network/IPv4/Core/RoutingTable.h \
  ../../Network/IPv4/Core/ip_address.h
SimpleApp.o: SimpleApp.cc \
  SimpleApp.h \
  ../../Network/IPv4/Core/IPInterfacePacket.h \
  ../../Network/IPv4/Core/IPDatagram.h \
  ../../Network/IPv4/Core/ICMP.h \
  ../../Util/basic_consts.h \
  ../../Network/IPv4/Core/RoutingTableAccess.h \
  ../../Util/ProcessorAccess.h \
  ../../Network/IPv4/Core/RoutingTable.h \
  ../../Network/IPv4/Core/ip_address.h
TrafficGen_n.o: TrafficGen_n.cc

Read comments below. --Andras

-------------------------------------------------
From: Vojta Janota
Sent: Monday, October 03, 2005 7:01 PM
To: Andras Varga
Subject: Re: 

Hi Andras,

Unfortunately existing LDP can't be made working with my MPLSModule.cc. 
In my model, MPSLModule's only job is to

1. forward labeled packets
    - incoming label should be always resolved, if it is not (our peer 
      got berserk) the packet is discarded
2. forward unlabeled packets (when we are ingress router), there are 3 
   possibilities:
    2a) classifier+signalling+LIB tell us label&interface for given datagram
    2b) there is no forwarding equivalence class for this ipdatagram 
        associated
    2c) there is FEC associated, but it is not bound to any existing LSP

In 2b) and 2c) case, the packet is forwarded as a regular datagram (i.e. 
using routing table, with 'generic' label -1). In any case, there is no 
buffering or anything like that and MPLSModule always decides what to do 
immediately by asking LIB or classifier+signalling+LIB. classifier and 
signalling configuration must be explicitly given.

The original MPLSModule and LDP work in a different way by buffering 
incoming packets when there was no existing LSP for them and signalling 
was told to create new LSP. Later when this LSP was successfully 
established, the buffered packets were sent onto the path.

Correct LDP, as far as I know, works by exchanging labels (apripori) for 
every existing routing table entry and thus anytime an ipdatagram 
arrives, there is an entry in LIB for this datagram and it can be 
forwarded immediately (plus you can of course establish paths other than 
those basic given by routing table for traffic engineering purposes).

The easiest way to make LDP work (correctly) is to rewrite it, I'm 
affraid. It should be easy though, at least the very basic functionality.

Regards,
Vojta

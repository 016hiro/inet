#
#  Makefile for IPv4
#
#  ** This file was automatically generated by the command:
#  opp_makemake -f -N -b /home/andras/IPSuite -c /home/andras/IPSuite/ipsuiteconfig -n -r -I../../Base -I../../Util
#

# Name of target to be created (-o option)
TARGET = IPv4

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I../../Base -I../../Util

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with (wildcard needed to prevent "no such file *.o" errors)
EXT_DIR_OBJS=$(wildcard )

# time stamps of other directories (used as dependency)
EXT_DIR_TSTAMPS= ../../Base/.tstamp ../../Util/.tstamp

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------
# Import generic settings from ../../ipsuiteconfig
include ../../ipsuiteconfig

#------------------------------------------------------------------------------

# subdirectories to recurse into
SUBDIRS= 

# object files in this directory
OBJS= ICMPMessage_m.o IPControlInfo_m.o IPDatagram_m.o ICMP.o IPAddress.o IPAddressResolver.o IP.o IPFragBuf.o ProtocolMap.o RoutingTable.o RoutingTableParser.o

# header files generated (from msg files)
GENERATEDHEADERS= ICMPMessage_m.h IPControlInfo_m.h IPDatagram_m.h

#------------------------------------------------------------------------------

$(TARGET): $(OBJS) subdirs Makefile .tstamp
	@# do nothing

.tstamp: $(OBJS)
	echo>.tstamp

$(OBJS) : $(GENERATEDHEADERS)


purify: $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_TSTAMPS) subdirs Makefile
	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

$(EXT_DIR_TSTAMPS):
	@echo
	@echo Error: $@ does not exist.
	@echo This means that at least the above dependency directory has not been built.
	@echo Maybe you need to do a top-level make?
	@echo
	@exit 1

.PHONY: subdirs $(SUBDIRS)

subdirs: $(SUBDIRS)

ICMPMessage_m.o: ICMPMessage_m.cc
	$(CXX) -c $(NEDCOPTS) ICMPMessage_m.cc

ICMPMessage_m.cc ICMPMessage_m.h: ICMPMessage.msg
	$(MSGC) $(INCLUDE_PATH) ICMPMessage.msg

IPControlInfo_m.o: IPControlInfo_m.cc
	$(CXX) -c $(NEDCOPTS) IPControlInfo_m.cc

IPControlInfo_m.cc IPControlInfo_m.h: IPControlInfo.msg
	$(MSGC) $(INCLUDE_PATH) IPControlInfo.msg

IPDatagram_m.o: IPDatagram_m.cc
	$(CXX) -c $(NEDCOPTS) IPDatagram_m.cc

IPDatagram_m.cc IPDatagram_m.h: IPDatagram.msg
	$(MSGC) $(INCLUDE_PATH) IPDatagram.msg

ICMP.o: ICMP.cc
	$(CXX) -c $(COPTS) ICMP.cc

IPAddress.o: IPAddress.cc
	$(CXX) -c $(COPTS) IPAddress.cc

IPAddressResolver.o: IPAddressResolver.cc
	$(CXX) -c $(COPTS) IPAddressResolver.cc

IP.o: IP.cc
	$(CXX) -c $(COPTS) IP.cc

IPFragBuf.o: IPFragBuf.cc
	$(CXX) -c $(COPTS) IPFragBuf.cc

ProtocolMap.o: ProtocolMap.cc
	$(CXX) -c $(COPTS) ProtocolMap.cc

RoutingTable.o: RoutingTable.cc
	$(CXX) -c $(COPTS) RoutingTable.cc

RoutingTableParser.o: RoutingTableParser.cc
	$(CXX) -c $(COPTS) RoutingTableParser.cc


#doc: neddoc doxy

#neddoc:
#	opp_neddoc -a

#doxy: doxy.cfg
#	doxygen doxy.cfg

generateheaders: $(GENERATEDHEADERS)
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) generateheaders) || exit 1; done

clean:
	rm -f *.o *_n.cc *_n.h *_m.cc *_m.h .tstamp
	rm -f *.vec *.sca
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) clean); done

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -- *.cc
	# $(MAKEDEPEND) $(INCLUDE_PATH) -fMakefile.in -- *.cc
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) depend) || exit 1; done

makefiles:
	# recreate Makefile
	opp_makemake -f  -N -b /home/andras/IPSuite -c /home/andras/IPSuite/ipsuiteconfig -n -r -I../../Base -I../../Util 
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) makefiles) || exit 1; done

makefile-ins:
	# recreate Makefile.in
	opp_makemake -f -m  -N -b /home/andras/IPSuite -c /home/andras/IPSuite/ipsuiteconfig -n -r -I../../Base -I../../Util 
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) makefile-ins) || exit 1; done

# "re-makemake" and "re-makemake-m" are deprecated, historic names of the above two targets
re-makemake: makefiles
re-makemake-m: makefile-ins


# DO NOT DELETE THIS LINE -- make depend depends on it.
ICMP.o: ICMP.cc \
  ICMP.h \
  RoutingTableAccess.h \
  ICMPMessage.h \
  IPDatagram.h \
  ../../Base/ModuleAccess.h \
  RoutingTable.h \
  ../../Base/ipsuite_defs.h \
  IPAddress.h
IPAddress.o: IPAddress.cc \
  IPAddress.h \
  ../../Base/ipsuite_defs.h
IPAddressResolver.o: IPAddressResolver.cc \
  IPAddressResolver.h \
  RoutingTable.h \
  IPAddress.h \
  ../../Base/ipsuite_defs.h
IP.o: IP.cc \
  IP.h \
  IPDatagram.h \
  RoutingTableAccess.h \
  RoutingTable.h \
  ICMPAccess.h \
  IPFragBuf.h \
  ProtocolMap.h \
  ../../Base/ModuleAccess.h \
  ../../Base/ipsuite_defs.h \
  IPAddress.h \
  ICMP.h \
  ICMPMessage.h
IPFragBuf.o: IPFragBuf.cc \
  IPFragBuf.h \
  ICMP.h \
  ../../Base/ipsuite_defs.h \
  IPDatagram.h \
  RoutingTableAccess.h \
  ICMPMessage.h \
  ../../Base/ModuleAccess.h \
  RoutingTable.h \
  IPAddress.h
ProtocolMap.o: ProtocolMap.cc \
  ProtocolMap.h
RoutingTable.o: RoutingTable.cc \
  ../../Util/stlwatch.h \
  RoutingTable.h \
  RoutingTableParser.h \
  ../../Base/ipsuite_defs.h \
  IPAddress.h
RoutingTableParser.o: RoutingTableParser.cc \
  RoutingTableParser.h \
  RoutingTable.h \
  ../../Base/ipsuite_defs.h \
  IPAddress.h

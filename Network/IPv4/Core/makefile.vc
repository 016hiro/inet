#
#  Makefile for Core
#
#  ** This file was automatically generated by the command:
#  opp_nmakemake -f -n -r -c ..\..\..\ipsuiteconfig.vc -I..\QoSStub -I..\..\..\NetworkInterfaces -I..\..\..\NetworkInterfaces\Queues -I..\..\..\Util
#
#  By the Perl version of opp_makemake for MSVC
#


# Name of target to be created (-o option)
TARGET = Core

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I..\QoSStub -I..\..\..\NetworkInterfaces -I..\..\..\NetworkInterfaces\Queues -I..\..\..\Util

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------


!include "..\..\..\ipsuiteconfig.vc"

# User interface libs
CMDENV_LIBS=envir.lib cmdenv.lib
TKENV_LIBS=envir.lib tkenv.lib $(TK_LIBS)

# Simulation kernel
KERNEL_LIBS=sim_std.lib

!if "$(WITH_NETBUILDER)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) nedxml.lib $(XML_LIBS)
!endif

!if "$(WITH_PARSIM)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) $(MPI_LIBS)
!endif

# Simulation kernel and user interface libraries
OMNETPP_LIBS=/libpath:$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(CFLAGS) $(NEDCFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------
# object files in this directory
OBJS= ErrorHandling_n.obj ICMP_n.obj IPFragmentation_n.obj IPMulticast_n.obj IPOutput_n.obj IPProcessing_n.obj IPSend_n.obj IPTunneling_n.obj LocalDeliver_n.obj PreRouting_n.obj Routing_n.obj RoutingTable_n.obj ErrorHandling.obj ICMP.obj in_addr.obj in_port.obj ip_address.obj ip_address_prefix.obj IPDatagram.obj IPFragmentation.obj IPInterfacePacket.obj IPMulticast.obj IPOutputCore.obj IPSendCore.obj IPTunneling.obj LocalDeliverCore.obj PreRoutingCore.obj RoutingCore.obj RoutingTable.obj RoutingTableAccess.obj

# subdirectories to recurse into
SUBDIRS= 
SUBDIR_TARGETS= 

$(TARGET): $(OBJS) Makefile.vc subdirs

# purify: $(OBJS) $(EXTRA_OBJS) subdirs Makefile.vc
# 	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

subdirs: $(SUBDIR_TARGETS)

ErrorHandling_n.obj: ErrorHandling_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp ErrorHandling_n.cc

ErrorHandling_n.cc: ErrorHandling.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) ErrorHandling.ned

ICMP_n.obj: ICMP_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp ICMP_n.cc

ICMP_n.cc: ICMP.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) ICMP.ned

IPFragmentation_n.obj: IPFragmentation_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp IPFragmentation_n.cc

IPFragmentation_n.cc: IPFragmentation.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) IPFragmentation.ned

IPMulticast_n.obj: IPMulticast_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp IPMulticast_n.cc

IPMulticast_n.cc: IPMulticast.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) IPMulticast.ned

IPOutput_n.obj: IPOutput_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp IPOutput_n.cc

IPOutput_n.cc: IPOutput.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) IPOutput.ned

IPProcessing_n.obj: IPProcessing_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp IPProcessing_n.cc

IPProcessing_n.cc: IPProcessing.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) IPProcessing.ned

IPSend_n.obj: IPSend_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp IPSend_n.cc

IPSend_n.cc: IPSend.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) IPSend.ned

IPTunneling_n.obj: IPTunneling_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp IPTunneling_n.cc

IPTunneling_n.cc: IPTunneling.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) IPTunneling.ned

LocalDeliver_n.obj: LocalDeliver_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp LocalDeliver_n.cc

LocalDeliver_n.cc: LocalDeliver.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) LocalDeliver.ned

PreRouting_n.obj: PreRouting_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp PreRouting_n.cc

PreRouting_n.cc: PreRouting.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) PreRouting.ned

Routing_n.obj: Routing_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp Routing_n.cc

Routing_n.cc: Routing.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) Routing.ned

RoutingTable_n.obj: RoutingTable_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp RoutingTable_n.cc

RoutingTable_n.cc: RoutingTable.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) RoutingTable.ned

ErrorHandling.obj: ErrorHandling.cc
	$(CXX) -c $(COPTS) /Tp ErrorHandling.cc

ICMP.obj: ICMP.cc
	$(CXX) -c $(COPTS) /Tp ICMP.cc

in_addr.obj: in_addr.cc
	$(CXX) -c $(COPTS) /Tp in_addr.cc

in_port.obj: in_port.cc
	$(CXX) -c $(COPTS) /Tp in_port.cc

ip_address.obj: ip_address.cc
	$(CXX) -c $(COPTS) /Tp ip_address.cc

ip_address_prefix.obj: ip_address_prefix.cc
	$(CXX) -c $(COPTS) /Tp ip_address_prefix.cc

IPDatagram.obj: IPDatagram.cc
	$(CXX) -c $(COPTS) /Tp IPDatagram.cc

IPFragmentation.obj: IPFragmentation.cc
	$(CXX) -c $(COPTS) /Tp IPFragmentation.cc

IPInterfacePacket.obj: IPInterfacePacket.cc
	$(CXX) -c $(COPTS) /Tp IPInterfacePacket.cc

IPMulticast.obj: IPMulticast.cc
	$(CXX) -c $(COPTS) /Tp IPMulticast.cc

IPOutputCore.obj: IPOutputCore.cc
	$(CXX) -c $(COPTS) /Tp IPOutputCore.cc

IPSendCore.obj: IPSendCore.cc
	$(CXX) -c $(COPTS) /Tp IPSendCore.cc

IPTunneling.obj: IPTunneling.cc
	$(CXX) -c $(COPTS) /Tp IPTunneling.cc

LocalDeliverCore.obj: LocalDeliverCore.cc
	$(CXX) -c $(COPTS) /Tp LocalDeliverCore.cc

PreRoutingCore.obj: PreRoutingCore.cc
	$(CXX) -c $(COPTS) /Tp PreRoutingCore.cc

RoutingCore.obj: RoutingCore.cc
	$(CXX) -c $(COPTS) /Tp RoutingCore.cc

RoutingTable.obj: RoutingTable.cc
	$(CXX) -c $(COPTS) /Tp RoutingTable.cc

RoutingTableAccess.obj: RoutingTableAccess.cc
	$(CXX) -c $(COPTS) /Tp RoutingTableAccess.cc


#doc: neddoc doxy

#neddoc:
#	@opp_neddoc -a

#doxy: doxy.cfg
#	@doxygen doxy.cfg

clean:
	-del *.obj *_n.cc *_n.h *_m.cc *_m.h $(TARGET)$(EXE_SUFFIX) 2>NUL
	-del *.vec *.sca 2>NUL
	-for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc clean && cd ..

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -- *.cc

re-makemake:
	opp_nmakemake -f -f -n -r -c ..\..\..\ipsuiteconfig.vc -I..\QoSStub -I..\..\..\NetworkInterfaces -I..\..\..\NetworkInterfaces\Queues -I..\..\..\Util  #recreate Makefile

# DO NOT DELETE THIS LINE -- make depend depends on it.


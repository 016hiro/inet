#
#  Makefile for QoSStub
#
#  ** This file was automatically generated by the command:
#  opp_nmakemake -f -n -c ..\..\..\ipsuiteconfig.vc -I../Core -I../../../Util
#
#  By the Perl version of opp_makemake for MSVC
#


# Name of target to be created (-o option)
TARGET = QoSStub

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# uncomment 1 of the 3 lines to support either serial or parallel operation
KERNEL_LIBS=$(STD_KERNEL_LIBS)
# KERNEL_LIBS=$(PVM_KERNEL_LIBS)
# KERNEL_LIBS=$(MPI_KERNEL_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I../Core -I../../../Util

# misc additional object and library files to link
EXRA_OBJS=

# object files in subdirectories
SUBDIR_OBJS=

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------


!include "..\..\..\ipsuiteconfig.vc"

# User interface libs
CMDENV_LIBS=envir.lib cmdenv.lib
TKENV_LIBS=envir.lib tkenv.lib $(TK_LIBS)

# Simulation kernel
STD_KERNEL_LIBS=sim_std.lib
MPI_KERNEL_LIBS=sim_mpi.lib $(MPI_LIBS)
PVM_KERNEL_LIBS=sim_pvm.lib $(PVM_LIBS)

# Simulation kernel and user interface libraries
OMNETPP_LIBS=/libpath:$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(CFLAGS) $(NEDCFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------
# Object files from this directory to link
OBJS= L2_DequeueHook_n.obj L2_EnqueueHook_n.obj NF_IP_FORWARD_n.obj NF_IP_LOCAL_IN_n.obj NF_IP_LOCAL_OUT_n.obj NF_IP_POST_ROUTING_n.obj NF_IP_PRE_ROUTING_n.obj   L2_Hookstubs.obj Netfilters.obj     

$(TARGET): $(OBJS) Makefile.vc 

# purify: $(OBJS) $(EXRA_OBJS)  Makefile.vc
# 	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXRA_OBJS) $(SUBDIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

L2_DequeueHook_n.obj: L2_DequeueHook_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp L2_DequeueHook_n.cc

L2_DequeueHook_n.cc: L2_DequeueHook.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) L2_DequeueHook.ned

L2_EnqueueHook_n.obj: L2_EnqueueHook_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp L2_EnqueueHook_n.cc

L2_EnqueueHook_n.cc: L2_EnqueueHook.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) L2_EnqueueHook.ned

NF_IP_FORWARD_n.obj: NF_IP_FORWARD_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp NF_IP_FORWARD_n.cc

NF_IP_FORWARD_n.cc: NF_IP_FORWARD.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) NF_IP_FORWARD.ned

NF_IP_LOCAL_IN_n.obj: NF_IP_LOCAL_IN_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp NF_IP_LOCAL_IN_n.cc

NF_IP_LOCAL_IN_n.cc: NF_IP_LOCAL_IN.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) NF_IP_LOCAL_IN.ned

NF_IP_LOCAL_OUT_n.obj: NF_IP_LOCAL_OUT_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp NF_IP_LOCAL_OUT_n.cc

NF_IP_LOCAL_OUT_n.cc: NF_IP_LOCAL_OUT.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) NF_IP_LOCAL_OUT.ned

NF_IP_POST_ROUTING_n.obj: NF_IP_POST_ROUTING_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp NF_IP_POST_ROUTING_n.cc

NF_IP_POST_ROUTING_n.cc: NF_IP_POST_ROUTING.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) NF_IP_POST_ROUTING.ned

NF_IP_PRE_ROUTING_n.obj: NF_IP_PRE_ROUTING_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp NF_IP_PRE_ROUTING_n.cc

NF_IP_PRE_ROUTING_n.cc: NF_IP_PRE_ROUTING.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) NF_IP_PRE_ROUTING.ned

L2_Hookstubs.obj: L2_Hookstubs.cc
	$(CXX) -c $(COPTS) /Tp L2_Hookstubs.cc

Netfilters.obj: Netfilters.cc
	$(CXX) -c $(COPTS) /Tp Netfilters.cc


doc: neddoc doxy

neddoc: 
	@opp_neddoc -a

doxy: doxy.cfg
	@doxygen doxy.cfg

clean:
	-del *.obj *_n.cc *_n.h *_m.cc *_m.h $(TARGET)$(EXE_SUFFIX) 2>NUL
	-del *.vec *.sca 2>NUL

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -- *.cc

re-makemake:
	opp_nmakemake_vc -f   #recreate Makefile

# DO NOT DELETE THIS LINE -- make depend depends on it.


#
#  Makefile for QoSStub
#
#  ** This file was automatically generated by the command:
#  opp_makemake -f -n -r -c ../../../ipsuiteconfig -I../Core -I../../../Util
#

# Name of target to be created (-o option)
TARGET = QoSStub

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# uncomment 1 of the 3 lines to support either serial or parallel operation
KERNEL_LIBS=$(STD_KERNEL_LIBS)
# KERNEL_LIBS=$(PVM_KERNEL_LIBS)
# KERNEL_LIBS=$(MPI_KERNEL_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I../Core -I../../../Util

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------
# Import generic settings from ../../../ipsuiteconfig
include ../../../ipsuiteconfig

#------------------------------------------------------------------------------

# subdirectories to recurse into
SUBDIRS= 

# object files in this directory
OBJS= L2_DequeueHook_n.o L2_EnqueueHook_n.o NF_IP_FORWARD_n.o NF_IP_LOCAL_IN_n.o NF_IP_LOCAL_OUT_n.o NF_IP_POST_ROUTING_n.o NF_IP_PRE_ROUTING_n.o    L2_Hookstubs.o Netfilters.o     

#------------------------------------------------------------------------------

$(TARGET): $(OBJS) subdirs Makefile
	

purify: $(OBJS) $(EXTRA_OBJS) subdirs Makefile
	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

.PHONY: subdirs $(SUBDIRS)

subdirs: $(SUBDIRS)

L2_DequeueHook_n.o: L2_DequeueHook_n.cc
	$(CXX) -c $(NEDCOPTS) L2_DequeueHook_n.cc

L2_DequeueHook_n.cc: L2_DequeueHook.ned
	$(NEDC) $(INCLUDE_PATH) L2_DequeueHook.ned

L2_EnqueueHook_n.o: L2_EnqueueHook_n.cc
	$(CXX) -c $(NEDCOPTS) L2_EnqueueHook_n.cc

L2_EnqueueHook_n.cc: L2_EnqueueHook.ned
	$(NEDC) $(INCLUDE_PATH) L2_EnqueueHook.ned

NF_IP_FORWARD_n.o: NF_IP_FORWARD_n.cc
	$(CXX) -c $(NEDCOPTS) NF_IP_FORWARD_n.cc

NF_IP_FORWARD_n.cc: NF_IP_FORWARD.ned
	$(NEDC) $(INCLUDE_PATH) NF_IP_FORWARD.ned

NF_IP_LOCAL_IN_n.o: NF_IP_LOCAL_IN_n.cc
	$(CXX) -c $(NEDCOPTS) NF_IP_LOCAL_IN_n.cc

NF_IP_LOCAL_IN_n.cc: NF_IP_LOCAL_IN.ned
	$(NEDC) $(INCLUDE_PATH) NF_IP_LOCAL_IN.ned

NF_IP_LOCAL_OUT_n.o: NF_IP_LOCAL_OUT_n.cc
	$(CXX) -c $(NEDCOPTS) NF_IP_LOCAL_OUT_n.cc

NF_IP_LOCAL_OUT_n.cc: NF_IP_LOCAL_OUT.ned
	$(NEDC) $(INCLUDE_PATH) NF_IP_LOCAL_OUT.ned

NF_IP_POST_ROUTING_n.o: NF_IP_POST_ROUTING_n.cc
	$(CXX) -c $(NEDCOPTS) NF_IP_POST_ROUTING_n.cc

NF_IP_POST_ROUTING_n.cc: NF_IP_POST_ROUTING.ned
	$(NEDC) $(INCLUDE_PATH) NF_IP_POST_ROUTING.ned

NF_IP_PRE_ROUTING_n.o: NF_IP_PRE_ROUTING_n.cc
	$(CXX) -c $(NEDCOPTS) NF_IP_PRE_ROUTING_n.cc

NF_IP_PRE_ROUTING_n.cc: NF_IP_PRE_ROUTING.ned
	$(NEDC) $(INCLUDE_PATH) NF_IP_PRE_ROUTING.ned

L2_Hookstubs.o: L2_Hookstubs.cc
	$(CXX) -c $(COPTS) L2_Hookstubs.cc

Netfilters.o: Netfilters.cc
	$(CXX) -c $(COPTS) Netfilters.cc


doc: neddoc doxy

neddoc:
	opp_neddoc -a

doxy: doxy.cfg
	doxygen doxy.cfg

clean:
	rm -f *.o *_n.cc *_n.h *_m.cc *_m.h $(TARGET)$(EXE_SUFFIX)
	rm -f *.vec *.sca
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) clean); done 

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -- *.cc
	# $(MAKEDEPEND) $(INCLUDE_PATH) -fMakefile.in -- *.cc

re-makemake:
	opp_makemake -f  -n -r -c ../../../ipsuiteconfig -I../Core -I../../../Util   #recreate Makefile

re-makemake-m:
	opp_makemake -f -m  -n -r -c ../../../ipsuiteconfig -I../Core -I../../../Util   #recreate Makefile.in


# DO NOT DELETE THIS LINE -- make depend depends on it.
L2_DequeueHook_n.o: L2_DequeueHook_n.cc
L2_EnqueueHook_n.o: L2_EnqueueHook_n.cc
L2_Hookstubs.o: L2_Hookstubs.cc \
  ../Core/hook_types.h \
  L2_Hookstubs.h \
  ../../../Util/basic_consts.h
Netfilters.o: Netfilters.cc \
  Netfilters.h \
  ../../../Util/basic_consts.h
NF_IP_FORWARD_n.o: NF_IP_FORWARD_n.cc
NF_IP_LOCAL_IN_n.o: NF_IP_LOCAL_IN_n.cc
NF_IP_LOCAL_OUT_n.o: NF_IP_LOCAL_OUT_n.cc
NF_IP_POST_ROUTING_n.o: NF_IP_POST_ROUTING_n.cc
NF_IP_PRE_ROUTING_n.o: NF_IP_PRE_ROUTING_n.cc

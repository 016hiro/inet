#
#  Makefile for QoS
#
#  ** This file was automatically generated by the command:
#  makemake -m -f -n -I. -I../Interface
#

# Name of target to be created (-o option)
TARGET = QoS

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# Uncomment the second line for parallel execution (PVM3) support (-p option):
KERNEL_LIBS=$(STD_KERNEL_LIBS)
# KERNEL_LIBS=$(PVM_KERNEL_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I. -I../Interface

# misc additional object and library files to link
EXRA_OBJS=

# object files in subdirectories
SUBDIR_OBJS=

# Additional libraries (-l option)
LIBS=

#------------------------------------------------------------------------------

NEDC=@NEDC@
CXX=@CXX@
CC=@CC@
AR=@AR@
SHLIB_LD=@SHLIB_LD@

CFLAGS=@CFLAGS@
LDFLAGS=@LDFLAGS@
EXE_SUFFIX=@EXE_SUFFIX@

OMNETPP_INCL_DIR=@OMNETPP_INCL_DIR@
OMNETPP_LIB_DIR=@OMNETPP_LIB_DIR@

TK_LIBS=@TK_LIBS@
PVM_LIBS=@PVM_LIBS@
SYS_LIBS=@SYS_LIBS@
SYS_LIBS_PURE=-lm $(shell $(CXX) -print-file-name=libstdc++.a)

# User interface libs
CMDENV_LIBS=-lenvir -lcmdenv
TKENV_LIBS=-lenvir -ltkenv $(TK_LIBS)

# Simulation kernel
STD_KERNEL_LIBS=-lsim_std
PVM_KERNEL_LIBS=-lsim_pvm $(PVM_LIBS)

# Simulation kernel and user interface libraries
OMNETPP_LIBS=-L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------

# Object files from this directory to link
OBJS= BR_Deq_Par_n.o BR_Enq_Par_n.o BR_IN_Deq_n.o BR_IN_Deq_Par_n.o BR_IN_Enq_n.o BR_IN_Enq_Par_n.o BR_L3_n.o BR_L3_Par_n.o BR_OUT_Deq_n.o BR_OUT_Deq_Par_n.o BR_OUT_Enq_n.o BR_OUT_Enq_Par_n.o BR_OUT_L3_n.o BR_OUT_L3_Par_n.o Classifier_CP_n.o Classifier_IA_n.o Classifier_MF_n.o Classifier_Router_n.o Connection_Element_n.o DS_Packet_Entry_n.o DS_Packet_Exit_n.o Dropper_n.o EFMD_Arrival_n.o EFMD_Departure_n.o EFMD_Dequeue_n.o EFMD_Enqueue_n.o EFMD_Queue_n.o Enqueue_Hook_Trigger_n.o FHR_Deq_n.o FHR_Deq_Par_n.o FHR_Enq_n.o FHR_Enq_Par_n.o FHR_L3_n.o FHR_L3_Par_n.o FIFO_Dequeue_n.o FIFO_Enqueue_n.o FIFO_Queue_n.o IR_Deq_n.o IR_Deq_Par_n.o IR_Enq_n.o IR_Enq_Par_n.o L2_DequeueHook_n.o L2_EnqueueHook_n.o LB_Dequeue_n.o LB_Enqueue_n.o LB_Queue_n.o Leaky_Bucket_n.o Marker_n.o Multiply_Element_n.o NF_IP_FORWARD_n.o NF_IP_LOCAL_IN_n.o NF_IP_LOCAL_OUT_n.o NF_IP_POST_ROUTING_n.o NF_IP_PRE_ROUTING_n.o Priority_Queueing_n.o RED_n.o RIO_Dequeue_n.o RIO_Enqueue_n.o RIO_Queue_n.o Round_Robin_n.o Router_Deq_Hook_Trigger_n.o Router_Dropper_n.o Router_L2_n.o SetInAdapter_n.o Token_Bucket_n.o Token_Bucket_WQ_n.o Traffic_Shaping_n.o WFQ_GEF_n.o WFQ_PQ_n.o Weighted_Round_Robin_n.o                   Connection_Element.o    Dropper.o              FIFO_Dequeue.o  FIFO_Enqueue.o  FIFO_Queue.o        LB_Dequeue.o  LB_Enqueue.o  LB_Queue.o  Leaky_Bucket.o  Marker.o        Priority_Queueing.o  RED.o          Token_Bucket.o       classifier.o classifier_cp.o classifier_ia.o classifier_mf.o classifier_router.o ds_packet_entry.o ds_packet_exit.o ds_queue.o efmd_arrival.o efmd_departure.o efmd_dequeue.o efmd_enqueue.o efmd_queue.o multiply_element.o packet.o profile.o profile_cp.o profile_ia.o profile_mf.o profile_router.o rio_dequeue.o rio_enqueue.o rio_queue.o round_robin.o router_deq_hook_trigger.o router_dropper.o setinadapter.o simulatedKIDS.o token_bucket_wq.o traffic_shaping.o weighted_round_robin.o wfq_gef.o wfq_pq.o

$(TARGET): $(OBJS) Makefile
	

purify: $(OBJS) $(EXRA_OBJS)   Makefile
	purify -chain-length="20" -g++=yes gcc $(LDFLAGS) $(OBJS) $(EXRA_OBJS) $(SUBDIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

BR_Deq_Par_n.o: BR_Deq_Par_n.cc
	$(CXX) -c $(COPTS) BR_Deq_Par_n.cc

BR_Deq_Par_n.cc: BR_Deq_Par.ned
	$(NEDC) $(INCLUDE_PATH) BR_Deq_Par.ned

BR_Enq_Par_n.o: BR_Enq_Par_n.cc
	$(CXX) -c $(COPTS) BR_Enq_Par_n.cc

BR_Enq_Par_n.cc: BR_Enq_Par.ned
	$(NEDC) $(INCLUDE_PATH) BR_Enq_Par.ned

BR_IN_Deq_n.o: BR_IN_Deq_n.cc
	$(CXX) -c $(COPTS) BR_IN_Deq_n.cc

BR_IN_Deq_n.cc: BR_IN_Deq.ned
	$(NEDC) $(INCLUDE_PATH) BR_IN_Deq.ned

BR_IN_Deq_Par_n.o: BR_IN_Deq_Par_n.cc
	$(CXX) -c $(COPTS) BR_IN_Deq_Par_n.cc

BR_IN_Deq_Par_n.cc: BR_IN_Deq_Par.ned
	$(NEDC) $(INCLUDE_PATH) BR_IN_Deq_Par.ned

BR_IN_Enq_n.o: BR_IN_Enq_n.cc
	$(CXX) -c $(COPTS) BR_IN_Enq_n.cc

BR_IN_Enq_n.cc: BR_IN_Enq.ned
	$(NEDC) $(INCLUDE_PATH) BR_IN_Enq.ned

BR_IN_Enq_Par_n.o: BR_IN_Enq_Par_n.cc
	$(CXX) -c $(COPTS) BR_IN_Enq_Par_n.cc

BR_IN_Enq_Par_n.cc: BR_IN_Enq_Par.ned
	$(NEDC) $(INCLUDE_PATH) BR_IN_Enq_Par.ned

BR_L3_n.o: BR_L3_n.cc
	$(CXX) -c $(COPTS) BR_L3_n.cc

BR_L3_n.cc: BR_L3.ned
	$(NEDC) $(INCLUDE_PATH) BR_L3.ned

BR_L3_Par_n.o: BR_L3_Par_n.cc
	$(CXX) -c $(COPTS) BR_L3_Par_n.cc

BR_L3_Par_n.cc: BR_L3_Par.ned
	$(NEDC) $(INCLUDE_PATH) BR_L3_Par.ned

BR_OUT_Deq_n.o: BR_OUT_Deq_n.cc
	$(CXX) -c $(COPTS) BR_OUT_Deq_n.cc

BR_OUT_Deq_n.cc: BR_OUT_Deq.ned
	$(NEDC) $(INCLUDE_PATH) BR_OUT_Deq.ned

BR_OUT_Deq_Par_n.o: BR_OUT_Deq_Par_n.cc
	$(CXX) -c $(COPTS) BR_OUT_Deq_Par_n.cc

BR_OUT_Deq_Par_n.cc: BR_OUT_Deq_Par.ned
	$(NEDC) $(INCLUDE_PATH) BR_OUT_Deq_Par.ned

BR_OUT_Enq_n.o: BR_OUT_Enq_n.cc
	$(CXX) -c $(COPTS) BR_OUT_Enq_n.cc

BR_OUT_Enq_n.cc: BR_OUT_Enq.ned
	$(NEDC) $(INCLUDE_PATH) BR_OUT_Enq.ned

BR_OUT_Enq_Par_n.o: BR_OUT_Enq_Par_n.cc
	$(CXX) -c $(COPTS) BR_OUT_Enq_Par_n.cc

BR_OUT_Enq_Par_n.cc: BR_OUT_Enq_Par.ned
	$(NEDC) $(INCLUDE_PATH) BR_OUT_Enq_Par.ned

BR_OUT_L3_n.o: BR_OUT_L3_n.cc
	$(CXX) -c $(COPTS) BR_OUT_L3_n.cc

BR_OUT_L3_n.cc: BR_OUT_L3.ned
	$(NEDC) $(INCLUDE_PATH) BR_OUT_L3.ned

BR_OUT_L3_Par_n.o: BR_OUT_L3_Par_n.cc
	$(CXX) -c $(COPTS) BR_OUT_L3_Par_n.cc

BR_OUT_L3_Par_n.cc: BR_OUT_L3_Par.ned
	$(NEDC) $(INCLUDE_PATH) BR_OUT_L3_Par.ned

Classifier_CP_n.o: Classifier_CP_n.cc
	$(CXX) -c $(COPTS) Classifier_CP_n.cc

Classifier_CP_n.cc: Classifier_CP.ned
	$(NEDC) $(INCLUDE_PATH) Classifier_CP.ned

Classifier_IA_n.o: Classifier_IA_n.cc
	$(CXX) -c $(COPTS) Classifier_IA_n.cc

Classifier_IA_n.cc: Classifier_IA.ned
	$(NEDC) $(INCLUDE_PATH) Classifier_IA.ned

Classifier_MF_n.o: Classifier_MF_n.cc
	$(CXX) -c $(COPTS) Classifier_MF_n.cc

Classifier_MF_n.cc: Classifier_MF.ned
	$(NEDC) $(INCLUDE_PATH) Classifier_MF.ned

Classifier_Router_n.o: Classifier_Router_n.cc
	$(CXX) -c $(COPTS) Classifier_Router_n.cc

Classifier_Router_n.cc: Classifier_Router.ned
	$(NEDC) $(INCLUDE_PATH) Classifier_Router.ned

Connection_Element_n.o: Connection_Element_n.cc
	$(CXX) -c $(COPTS) Connection_Element_n.cc

Connection_Element_n.cc: Connection_Element.ned
	$(NEDC) $(INCLUDE_PATH) Connection_Element.ned

DS_Packet_Entry_n.o: DS_Packet_Entry_n.cc
	$(CXX) -c $(COPTS) DS_Packet_Entry_n.cc

DS_Packet_Entry_n.cc: DS_Packet_Entry.ned
	$(NEDC) $(INCLUDE_PATH) DS_Packet_Entry.ned

DS_Packet_Exit_n.o: DS_Packet_Exit_n.cc
	$(CXX) -c $(COPTS) DS_Packet_Exit_n.cc

DS_Packet_Exit_n.cc: DS_Packet_Exit.ned
	$(NEDC) $(INCLUDE_PATH) DS_Packet_Exit.ned

Dropper_n.o: Dropper_n.cc
	$(CXX) -c $(COPTS) Dropper_n.cc

Dropper_n.cc: Dropper.ned
	$(NEDC) $(INCLUDE_PATH) Dropper.ned

EFMD_Arrival_n.o: EFMD_Arrival_n.cc
	$(CXX) -c $(COPTS) EFMD_Arrival_n.cc

EFMD_Arrival_n.cc: EFMD_Arrival.ned
	$(NEDC) $(INCLUDE_PATH) EFMD_Arrival.ned

EFMD_Departure_n.o: EFMD_Departure_n.cc
	$(CXX) -c $(COPTS) EFMD_Departure_n.cc

EFMD_Departure_n.cc: EFMD_Departure.ned
	$(NEDC) $(INCLUDE_PATH) EFMD_Departure.ned

EFMD_Dequeue_n.o: EFMD_Dequeue_n.cc
	$(CXX) -c $(COPTS) EFMD_Dequeue_n.cc

EFMD_Dequeue_n.cc: EFMD_Dequeue.ned
	$(NEDC) $(INCLUDE_PATH) EFMD_Dequeue.ned

EFMD_Enqueue_n.o: EFMD_Enqueue_n.cc
	$(CXX) -c $(COPTS) EFMD_Enqueue_n.cc

EFMD_Enqueue_n.cc: EFMD_Enqueue.ned
	$(NEDC) $(INCLUDE_PATH) EFMD_Enqueue.ned

EFMD_Queue_n.o: EFMD_Queue_n.cc
	$(CXX) -c $(COPTS) EFMD_Queue_n.cc

EFMD_Queue_n.cc: EFMD_Queue.ned
	$(NEDC) $(INCLUDE_PATH) EFMD_Queue.ned

Enqueue_Hook_Trigger_n.o: Enqueue_Hook_Trigger_n.cc
	$(CXX) -c $(COPTS) Enqueue_Hook_Trigger_n.cc

Enqueue_Hook_Trigger_n.cc: Enqueue_Hook_Trigger.ned
	$(NEDC) $(INCLUDE_PATH) Enqueue_Hook_Trigger.ned

FHR_Deq_n.o: FHR_Deq_n.cc
	$(CXX) -c $(COPTS) FHR_Deq_n.cc

FHR_Deq_n.cc: FHR_Deq.ned
	$(NEDC) $(INCLUDE_PATH) FHR_Deq.ned

FHR_Deq_Par_n.o: FHR_Deq_Par_n.cc
	$(CXX) -c $(COPTS) FHR_Deq_Par_n.cc

FHR_Deq_Par_n.cc: FHR_Deq_Par.ned
	$(NEDC) $(INCLUDE_PATH) FHR_Deq_Par.ned

FHR_Enq_n.o: FHR_Enq_n.cc
	$(CXX) -c $(COPTS) FHR_Enq_n.cc

FHR_Enq_n.cc: FHR_Enq.ned
	$(NEDC) $(INCLUDE_PATH) FHR_Enq.ned

FHR_Enq_Par_n.o: FHR_Enq_Par_n.cc
	$(CXX) -c $(COPTS) FHR_Enq_Par_n.cc

FHR_Enq_Par_n.cc: FHR_Enq_Par.ned
	$(NEDC) $(INCLUDE_PATH) FHR_Enq_Par.ned

FHR_L3_n.o: FHR_L3_n.cc
	$(CXX) -c $(COPTS) FHR_L3_n.cc

FHR_L3_n.cc: FHR_L3.ned
	$(NEDC) $(INCLUDE_PATH) FHR_L3.ned

FHR_L3_Par_n.o: FHR_L3_Par_n.cc
	$(CXX) -c $(COPTS) FHR_L3_Par_n.cc

FHR_L3_Par_n.cc: FHR_L3_Par.ned
	$(NEDC) $(INCLUDE_PATH) FHR_L3_Par.ned

FIFO_Dequeue_n.o: FIFO_Dequeue_n.cc
	$(CXX) -c $(COPTS) FIFO_Dequeue_n.cc

FIFO_Dequeue_n.cc: FIFO_Dequeue.ned
	$(NEDC) $(INCLUDE_PATH) FIFO_Dequeue.ned

FIFO_Enqueue_n.o: FIFO_Enqueue_n.cc
	$(CXX) -c $(COPTS) FIFO_Enqueue_n.cc

FIFO_Enqueue_n.cc: FIFO_Enqueue.ned
	$(NEDC) $(INCLUDE_PATH) FIFO_Enqueue.ned

FIFO_Queue_n.o: FIFO_Queue_n.cc
	$(CXX) -c $(COPTS) FIFO_Queue_n.cc

FIFO_Queue_n.cc: FIFO_Queue.ned
	$(NEDC) $(INCLUDE_PATH) FIFO_Queue.ned

IR_Deq_n.o: IR_Deq_n.cc
	$(CXX) -c $(COPTS) IR_Deq_n.cc

IR_Deq_n.cc: IR_Deq.ned
	$(NEDC) $(INCLUDE_PATH) IR_Deq.ned

IR_Deq_Par_n.o: IR_Deq_Par_n.cc
	$(CXX) -c $(COPTS) IR_Deq_Par_n.cc

IR_Deq_Par_n.cc: IR_Deq_Par.ned
	$(NEDC) $(INCLUDE_PATH) IR_Deq_Par.ned

IR_Enq_n.o: IR_Enq_n.cc
	$(CXX) -c $(COPTS) IR_Enq_n.cc

IR_Enq_n.cc: IR_Enq.ned
	$(NEDC) $(INCLUDE_PATH) IR_Enq.ned

IR_Enq_Par_n.o: IR_Enq_Par_n.cc
	$(CXX) -c $(COPTS) IR_Enq_Par_n.cc

IR_Enq_Par_n.cc: IR_Enq_Par.ned
	$(NEDC) $(INCLUDE_PATH) IR_Enq_Par.ned

L2_DequeueHook_n.o: L2_DequeueHook_n.cc
	$(CXX) -c $(COPTS) L2_DequeueHook_n.cc

L2_DequeueHook_n.cc: L2_DequeueHook.ned
	$(NEDC) $(INCLUDE_PATH) L2_DequeueHook.ned

L2_EnqueueHook_n.o: L2_EnqueueHook_n.cc
	$(CXX) -c $(COPTS) L2_EnqueueHook_n.cc

L2_EnqueueHook_n.cc: L2_EnqueueHook.ned
	$(NEDC) $(INCLUDE_PATH) L2_EnqueueHook.ned

LB_Dequeue_n.o: LB_Dequeue_n.cc
	$(CXX) -c $(COPTS) LB_Dequeue_n.cc

LB_Dequeue_n.cc: LB_Dequeue.ned
	$(NEDC) $(INCLUDE_PATH) LB_Dequeue.ned

LB_Enqueue_n.o: LB_Enqueue_n.cc
	$(CXX) -c $(COPTS) LB_Enqueue_n.cc

LB_Enqueue_n.cc: LB_Enqueue.ned
	$(NEDC) $(INCLUDE_PATH) LB_Enqueue.ned

LB_Queue_n.o: LB_Queue_n.cc
	$(CXX) -c $(COPTS) LB_Queue_n.cc

LB_Queue_n.cc: LB_Queue.ned
	$(NEDC) $(INCLUDE_PATH) LB_Queue.ned

Leaky_Bucket_n.o: Leaky_Bucket_n.cc
	$(CXX) -c $(COPTS) Leaky_Bucket_n.cc

Leaky_Bucket_n.cc: Leaky_Bucket.ned
	$(NEDC) $(INCLUDE_PATH) Leaky_Bucket.ned

Marker_n.o: Marker_n.cc
	$(CXX) -c $(COPTS) Marker_n.cc

Marker_n.cc: Marker.ned
	$(NEDC) $(INCLUDE_PATH) Marker.ned

Multiply_Element_n.o: Multiply_Element_n.cc
	$(CXX) -c $(COPTS) Multiply_Element_n.cc

Multiply_Element_n.cc: Multiply_Element.ned
	$(NEDC) $(INCLUDE_PATH) Multiply_Element.ned

NF_IP_FORWARD_n.o: NF_IP_FORWARD_n.cc
	$(CXX) -c $(COPTS) NF_IP_FORWARD_n.cc

NF_IP_FORWARD_n.cc: NF_IP_FORWARD.ned
	$(NEDC) $(INCLUDE_PATH) NF_IP_FORWARD.ned

NF_IP_LOCAL_IN_n.o: NF_IP_LOCAL_IN_n.cc
	$(CXX) -c $(COPTS) NF_IP_LOCAL_IN_n.cc

NF_IP_LOCAL_IN_n.cc: NF_IP_LOCAL_IN.ned
	$(NEDC) $(INCLUDE_PATH) NF_IP_LOCAL_IN.ned

NF_IP_LOCAL_OUT_n.o: NF_IP_LOCAL_OUT_n.cc
	$(CXX) -c $(COPTS) NF_IP_LOCAL_OUT_n.cc

NF_IP_LOCAL_OUT_n.cc: NF_IP_LOCAL_OUT.ned
	$(NEDC) $(INCLUDE_PATH) NF_IP_LOCAL_OUT.ned

NF_IP_POST_ROUTING_n.o: NF_IP_POST_ROUTING_n.cc
	$(CXX) -c $(COPTS) NF_IP_POST_ROUTING_n.cc

NF_IP_POST_ROUTING_n.cc: NF_IP_POST_ROUTING.ned
	$(NEDC) $(INCLUDE_PATH) NF_IP_POST_ROUTING.ned

NF_IP_PRE_ROUTING_n.o: NF_IP_PRE_ROUTING_n.cc
	$(CXX) -c $(COPTS) NF_IP_PRE_ROUTING_n.cc

NF_IP_PRE_ROUTING_n.cc: NF_IP_PRE_ROUTING.ned
	$(NEDC) $(INCLUDE_PATH) NF_IP_PRE_ROUTING.ned

Priority_Queueing_n.o: Priority_Queueing_n.cc
	$(CXX) -c $(COPTS) Priority_Queueing_n.cc

Priority_Queueing_n.cc: Priority_Queueing.ned
	$(NEDC) $(INCLUDE_PATH) Priority_Queueing.ned

RED_n.o: RED_n.cc
	$(CXX) -c $(COPTS) RED_n.cc

RED_n.cc: RED.ned
	$(NEDC) $(INCLUDE_PATH) RED.ned

RIO_Dequeue_n.o: RIO_Dequeue_n.cc
	$(CXX) -c $(COPTS) RIO_Dequeue_n.cc

RIO_Dequeue_n.cc: RIO_Dequeue.ned
	$(NEDC) $(INCLUDE_PATH) RIO_Dequeue.ned

RIO_Enqueue_n.o: RIO_Enqueue_n.cc
	$(CXX) -c $(COPTS) RIO_Enqueue_n.cc

RIO_Enqueue_n.cc: RIO_Enqueue.ned
	$(NEDC) $(INCLUDE_PATH) RIO_Enqueue.ned

RIO_Queue_n.o: RIO_Queue_n.cc
	$(CXX) -c $(COPTS) RIO_Queue_n.cc

RIO_Queue_n.cc: RIO_Queue.ned
	$(NEDC) $(INCLUDE_PATH) RIO_Queue.ned

Round_Robin_n.o: Round_Robin_n.cc
	$(CXX) -c $(COPTS) Round_Robin_n.cc

Round_Robin_n.cc: Round_Robin.ned
	$(NEDC) $(INCLUDE_PATH) Round_Robin.ned

Router_Deq_Hook_Trigger_n.o: Router_Deq_Hook_Trigger_n.cc
	$(CXX) -c $(COPTS) Router_Deq_Hook_Trigger_n.cc

Router_Deq_Hook_Trigger_n.cc: Router_Deq_Hook_Trigger.ned
	$(NEDC) $(INCLUDE_PATH) Router_Deq_Hook_Trigger.ned

Router_Dropper_n.o: Router_Dropper_n.cc
	$(CXX) -c $(COPTS) Router_Dropper_n.cc

Router_Dropper_n.cc: Router_Dropper.ned
	$(NEDC) $(INCLUDE_PATH) Router_Dropper.ned

Router_L2_n.o: Router_L2_n.cc
	$(CXX) -c $(COPTS) Router_L2_n.cc

Router_L2_n.cc: Router_L2.ned
	$(NEDC) $(INCLUDE_PATH) Router_L2.ned

SetInAdapter_n.o: SetInAdapter_n.cc
	$(CXX) -c $(COPTS) SetInAdapter_n.cc

SetInAdapter_n.cc: SetInAdapter.ned
	$(NEDC) $(INCLUDE_PATH) SetInAdapter.ned

Token_Bucket_n.o: Token_Bucket_n.cc
	$(CXX) -c $(COPTS) Token_Bucket_n.cc

Token_Bucket_n.cc: Token_Bucket.ned
	$(NEDC) $(INCLUDE_PATH) Token_Bucket.ned

Token_Bucket_WQ_n.o: Token_Bucket_WQ_n.cc
	$(CXX) -c $(COPTS) Token_Bucket_WQ_n.cc

Token_Bucket_WQ_n.cc: Token_Bucket_WQ.ned
	$(NEDC) $(INCLUDE_PATH) Token_Bucket_WQ.ned

Traffic_Shaping_n.o: Traffic_Shaping_n.cc
	$(CXX) -c $(COPTS) Traffic_Shaping_n.cc

Traffic_Shaping_n.cc: Traffic_Shaping.ned
	$(NEDC) $(INCLUDE_PATH) Traffic_Shaping.ned

WFQ_GEF_n.o: WFQ_GEF_n.cc
	$(CXX) -c $(COPTS) WFQ_GEF_n.cc

WFQ_GEF_n.cc: WFQ_GEF.ned
	$(NEDC) $(INCLUDE_PATH) WFQ_GEF.ned

WFQ_PQ_n.o: WFQ_PQ_n.cc
	$(CXX) -c $(COPTS) WFQ_PQ_n.cc

WFQ_PQ_n.cc: WFQ_PQ.ned
	$(NEDC) $(INCLUDE_PATH) WFQ_PQ.ned

Weighted_Round_Robin_n.o: Weighted_Round_Robin_n.cc
	$(CXX) -c $(COPTS) Weighted_Round_Robin_n.cc

Weighted_Round_Robin_n.cc: Weighted_Round_Robin.ned
	$(NEDC) $(INCLUDE_PATH) Weighted_Round_Robin.ned

Connection_Element.o: Connection_Element.cc
	$(CXX) -c $(COPTS) Connection_Element.cc

Dropper.o: Dropper.cc
	$(CXX) -c $(COPTS) Dropper.cc

FIFO_Dequeue.o: FIFO_Dequeue.cc
	$(CXX) -c $(COPTS) FIFO_Dequeue.cc

FIFO_Enqueue.o: FIFO_Enqueue.cc
	$(CXX) -c $(COPTS) FIFO_Enqueue.cc

FIFO_Queue.o: FIFO_Queue.cc
	$(CXX) -c $(COPTS) FIFO_Queue.cc

LB_Dequeue.o: LB_Dequeue.cc
	$(CXX) -c $(COPTS) LB_Dequeue.cc

LB_Enqueue.o: LB_Enqueue.cc
	$(CXX) -c $(COPTS) LB_Enqueue.cc

LB_Queue.o: LB_Queue.cc
	$(CXX) -c $(COPTS) LB_Queue.cc

Leaky_Bucket.o: Leaky_Bucket.cc
	$(CXX) -c $(COPTS) Leaky_Bucket.cc

Marker.o: Marker.cc
	$(CXX) -c $(COPTS) Marker.cc

Priority_Queueing.o: Priority_Queueing.cc
	$(CXX) -c $(COPTS) Priority_Queueing.cc

RED.o: RED.cc
	$(CXX) -c $(COPTS) RED.cc

Token_Bucket.o: Token_Bucket.cc
	$(CXX) -c $(COPTS) Token_Bucket.cc

classifier.o: classifier.cc
	$(CXX) -c $(COPTS) classifier.cc

classifier_cp.o: classifier_cp.cc
	$(CXX) -c $(COPTS) classifier_cp.cc

classifier_ia.o: classifier_ia.cc
	$(CXX) -c $(COPTS) classifier_ia.cc

classifier_mf.o: classifier_mf.cc
	$(CXX) -c $(COPTS) classifier_mf.cc

classifier_router.o: classifier_router.cc
	$(CXX) -c $(COPTS) classifier_router.cc

ds_packet_entry.o: ds_packet_entry.cc
	$(CXX) -c $(COPTS) ds_packet_entry.cc

ds_packet_exit.o: ds_packet_exit.cc
	$(CXX) -c $(COPTS) ds_packet_exit.cc

ds_queue.o: ds_queue.cc
	$(CXX) -c $(COPTS) ds_queue.cc

efmd_arrival.o: efmd_arrival.cc
	$(CXX) -c $(COPTS) efmd_arrival.cc

efmd_departure.o: efmd_departure.cc
	$(CXX) -c $(COPTS) efmd_departure.cc

efmd_dequeue.o: efmd_dequeue.cc
	$(CXX) -c $(COPTS) efmd_dequeue.cc

efmd_enqueue.o: efmd_enqueue.cc
	$(CXX) -c $(COPTS) efmd_enqueue.cc

efmd_queue.o: efmd_queue.cc
	$(CXX) -c $(COPTS) efmd_queue.cc

multiply_element.o: multiply_element.cc
	$(CXX) -c $(COPTS) multiply_element.cc

packet.o: packet.cc
	$(CXX) -c $(COPTS) packet.cc

profile.o: profile.cc
	$(CXX) -c $(COPTS) profile.cc

profile_cp.o: profile_cp.cc
	$(CXX) -c $(COPTS) profile_cp.cc

profile_ia.o: profile_ia.cc
	$(CXX) -c $(COPTS) profile_ia.cc

profile_mf.o: profile_mf.cc
	$(CXX) -c $(COPTS) profile_mf.cc

profile_router.o: profile_router.cc
	$(CXX) -c $(COPTS) profile_router.cc

rio_dequeue.o: rio_dequeue.cc
	$(CXX) -c $(COPTS) rio_dequeue.cc

rio_enqueue.o: rio_enqueue.cc
	$(CXX) -c $(COPTS) rio_enqueue.cc

rio_queue.o: rio_queue.cc
	$(CXX) -c $(COPTS) rio_queue.cc

round_robin.o: round_robin.cc
	$(CXX) -c $(COPTS) round_robin.cc

router_deq_hook_trigger.o: router_deq_hook_trigger.cc
	$(CXX) -c $(COPTS) router_deq_hook_trigger.cc

router_dropper.o: router_dropper.cc
	$(CXX) -c $(COPTS) router_dropper.cc

setinadapter.o: setinadapter.cc
	$(CXX) -c $(COPTS) setinadapter.cc

simulatedKIDS.o: simulatedKIDS.cc
	$(CXX) -c $(COPTS) simulatedKIDS.cc

token_bucket_wq.o: token_bucket_wq.cc
	$(CXX) -c $(COPTS) token_bucket_wq.cc

traffic_shaping.o: traffic_shaping.cc
	$(CXX) -c $(COPTS) traffic_shaping.cc

weighted_round_robin.o: weighted_round_robin.cc
	$(CXX) -c $(COPTS) weighted_round_robin.cc

wfq_gef.o: wfq_gef.cc
	$(CXX) -c $(COPTS) wfq_gef.cc

wfq_pq.o: wfq_pq.cc
	$(CXX) -c $(COPTS) wfq_pq.cc

clean:
	rm -f *.o *_n.cc $(TARGET)$(EXE_SUFFIX)
	rm -f *.vec *.sca

depend:
	makedepend -Y $(INCLUDE_PATH) -- *.cc
	makedepend -Y $(INCLUDE_PATH) -fMakefile.in -- *.cc

re-makemake:
	makemake -f  -n -I. -I../Interface   #recreate Makefile

re-makemake-m:
	makemake -f -m  -n -I. -I../Interface   #recreate Makefile.in

# DO NOT DELETE THIS LINE -- make depend depends on it.


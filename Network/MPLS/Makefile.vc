#
#  Makefile for MPLS
#
#  ** This file was automatically generated by the command:
#  opp_nmakemake -f -n -r -c ..\..\ipsuiteconfig.vc -I..\IPv4\Core -I..\..\Transport\TCP -I..\..\Util
#
#  By the Perl version of opp_makemake for MSVC
#


# Name of target to be created (-o option)
TARGET = MPLS

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# uncomment 1 of the 3 lines to support either serial or parallel operation
KERNEL_LIBS=$(STD_KERNEL_LIBS)
# KERNEL_LIBS=$(PVM_KERNEL_LIBS)
# KERNEL_LIBS=$(MPI_KERNEL_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I..\IPv4\Core -I..\..\Transport\TCP -I..\..\Util

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------


!include "..\..\ipsuiteconfig.vc"

# User interface libs
CMDENV_LIBS=envir.lib cmdenv.lib
TKENV_LIBS=envir.lib tkenv.lib $(TK_LIBS)

# Simulation kernel
STD_KERNEL_LIBS=sim_std.lib
MPI_KERNEL_LIBS=sim_mpi.lib $(MPI_LIBS)
PVM_KERNEL_LIBS=sim_pvm.lib $(PVM_LIBS)

# Simulation kernel and user interface libraries
OMNETPP_LIBS=/libpath:$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(CFLAGS) $(NEDCFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------
# object files in this directory
OBJS= DatalinkLayer_n.obj InfoManager_n.obj LIBTable_n.obj MPLSModule_n.obj InfoManager.obj LIBtable.obj LIBTableAccess.obj MPLS2IP.obj MPLSModule.obj MPLSPacket.obj StringTokenizer.obj

# subdirectories to recurse into
SUBDIRS= 

$(TARGET): $(OBJS) Makefile.vc subdirs

# purify: $(OBJS) $(EXTRA_OBJS) subdirs Makefile.vc
# 	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

subdirs:

DatalinkLayer_n.obj: DatalinkLayer_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp DatalinkLayer_n.cc

DatalinkLayer_n.cc: DatalinkLayer.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) DatalinkLayer.ned

InfoManager_n.obj: InfoManager_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp InfoManager_n.cc

InfoManager_n.cc: InfoManager.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) InfoManager.ned

LIBTable_n.obj: LIBTable_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp LIBTable_n.cc

LIBTable_n.cc: LIBTable.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) LIBTable.ned

MPLSModule_n.obj: MPLSModule_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp MPLSModule_n.cc

MPLSModule_n.cc: MPLSModule.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) MPLSModule.ned

InfoManager.obj: InfoManager.cc
	$(CXX) -c $(COPTS) /Tp InfoManager.cc

LIBtable.obj: LIBtable.cc
	$(CXX) -c $(COPTS) /Tp LIBtable.cc

LIBTableAccess.obj: LIBTableAccess.cc
	$(CXX) -c $(COPTS) /Tp LIBTableAccess.cc

MPLS2IP.obj: MPLS2IP.cc
	$(CXX) -c $(COPTS) /Tp MPLS2IP.cc

MPLSModule.obj: MPLSModule.cc
	$(CXX) -c $(COPTS) /Tp MPLSModule.cc

MPLSPacket.obj: MPLSPacket.cc
	$(CXX) -c $(COPTS) /Tp MPLSPacket.cc

StringTokenizer.obj: StringTokenizer.cc
	$(CXX) -c $(COPTS) /Tp StringTokenizer.cc


doc: neddoc doxy

neddoc:
	@opp_neddoc -a

doxy: doxy.cfg
	@doxygen doxy.cfg

clean:
	-del *.obj *_n.cc *_n.h *_m.cc *_m.h $(TARGET)$(EXE_SUFFIX) 2>NUL
	-del *.vec *.sca 2>NUL
	-for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc clean && cd ..

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -- *.cc

re-makemake:
	opp_nmakemake_vc -f   #recreate Makefile

# DO NOT DELETE THIS LINE -- make depend depends on it.


#
#  Makefile for MPLS
#
#  ** This file was automatically generated by the command:
#  opp_makemake -f -n -r -c ../../ipsuiteconfig
#

# Name of target to be created (-o option)
TARGET = MPLS

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# uncomment 1 of the 3 lines to support either serial or parallel operation
KERNEL_LIBS=$(STD_KERNEL_LIBS)
# KERNEL_LIBS=$(PVM_KERNEL_LIBS)
# KERNEL_LIBS=$(MPI_KERNEL_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH=

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------
# Import generic settings from ../../ipsuiteconfig
include ../../ipsuiteconfig

#------------------------------------------------------------------------------

# subdirectories to recurse into
SUBDIRS=  demo2 ldp-mpls1 samples Tester TestTE1 TestTE2 TestTE3 TestTE4 TestTE4Old TestTE5 TestTE6

# object files in this directory
OBJS=   

#------------------------------------------------------------------------------
# contents of file makefrag:
# this file automatically gets inserted into Makefiles generated by opp_makemake

all: $(TARGET)

demo2 ldp-mpls1 TestTE1 TestTE2 TestTE3 TestTE4 TestTE4Old TestTE5 TestTE6 : Tester

#------------------------------------------------------------------------------

$(TARGET): $(OBJS) subdirs Makefile
	

purify: $(OBJS) $(EXTRA_OBJS) subdirs Makefile
	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

.PHONY: subdirs $(SUBDIRS)

subdirs: $(SUBDIRS)

demo2:
	cd demo2 && $(MAKE)

ldp-mpls1:
	cd ldp-mpls1 && $(MAKE)

samples:
	cd samples && $(MAKE)

Tester:
	cd Tester && $(MAKE)

TestTE1:
	cd TestTE1 && $(MAKE)

TestTE2:
	cd TestTE2 && $(MAKE)

TestTE3:
	cd TestTE3 && $(MAKE)

TestTE4:
	cd TestTE4 && $(MAKE)

TestTE4Old:
	cd TestTE4Old && $(MAKE)

TestTE5:
	cd TestTE5 && $(MAKE)

TestTE6:
	cd TestTE6 && $(MAKE)


#doc: neddoc doxy

#neddoc:
#	opp_neddoc -a

#doxy: doxy.cfg
#	doxygen doxy.cfg

clean:
	rm -f *.o *_n.cc *_n.h *_m.cc *_m.h $(TARGET)$(EXE_SUFFIX)
	rm -f *.vec *.sca
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) clean); done 

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -- *.cc
	# $(MAKEDEPEND) $(INCLUDE_PATH) -fMakefile.in -- *.cc

re-makemake:
	opp_makemake -f  -n -r -c ../../ipsuiteconfig   #recreate Makefile

re-makemake-m:
	opp_makemake -f -m  -n -r -c ../../ipsuiteconfig   #recreate Makefile.in


# DO NOT DELETE THIS LINE -- make depend depends on it.


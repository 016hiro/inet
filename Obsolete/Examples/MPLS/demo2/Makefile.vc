#
#  Makefile for demo2
#
#  ** This file was automatically generated by the command:
#  opp_nmakemake -f -N -w -c ..\..\..\ipsuiteconfig.vc -I$(ROOT)/Network/IPv4 -I$(ROOT)/Network/IPv4d -I$(ROOT)/Transport/TCP -I$(ROOT)/Transport/NewTCP -I$(ROOT)/Transport/UDP -I$(ROOT)/Transport/Socket -I$(ROOT)/NetworkInterfaces -I$(ROOT)/NetworkInterfaces/_802 -I$(ROOT)/NetworkInterfaces/ARP -I$(ROOT)/NetworkInterfaces/Ethernet -I$(ROOT)/NetworkInterfaces/PPP -I$(ROOT)/Applications/Generic -I$(ROOT)/Applications/TCPApp -I$(ROOT)/Applications/UDPApp -I$(ROOT)/Applications/PingApp -I$(ROOT)/Base -I$(ROOT)/Util -I$(ROOT)/Nodes/IPSuite -I$(ROOT)/Network/MPLS -I$(ROOT)/Network/LDP -I$(ROOT)/Network/RSVP_TE -I$(ROOT)/Nodes/MPLS
#
#  By the Perl version of opp_makemake for MSVC
#


# Name of target to be created (-o option)
TARGET = demo2.exe

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I$(ROOT)/Network/IPv4 -I$(ROOT)/Network/IPv4d -I$(ROOT)/Transport/TCP -I$(ROOT)/Transport/NewTCP -I$(ROOT)/Transport/UDP -I$(ROOT)/Transport/Socket -I$(ROOT)/NetworkInterfaces -I$(ROOT)/NetworkInterfaces/_802 -I$(ROOT)/NetworkInterfaces/ARP -I$(ROOT)/NetworkInterfaces/Ethernet -I$(ROOT)/NetworkInterfaces/PPP -I$(ROOT)/Applications/Generic -I$(ROOT)/Applications/TCPApp -I$(ROOT)/Applications/UDPApp -I$(ROOT)/Applications/PingApp -I$(ROOT)/Base -I$(ROOT)/Util -I$(ROOT)/Nodes/IPSuite -I$(ROOT)/Network/MPLS -I$(ROOT)/Network/LDP -I$(ROOT)/Network/RSVP_TE -I$(ROOT)/Nodes/MPLS

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=$(ROOT)/Network/IPv4/*.obj \
            $(ROOT)/Network/IPv4d/*.obj \
            $(ROOT)/Transport/TCP/*.obj \
            $(ROOT)/Transport/NewTCP/*.obj \
            $(ROOT)/Transport/UDP/*.obj \
            $(ROOT)/Transport/Socket/*.obj \
            $(ROOT)/NetworkInterfaces/*.obj \
            $(ROOT)/NetworkInterfaces/_802/*.obj \
            $(ROOT)/NetworkInterfaces/ARP/*.obj \
            $(ROOT)/NetworkInterfaces/Ethernet/*.obj \
            $(ROOT)/NetworkInterfaces/PPP/*.obj \
            $(ROOT)/Applications/Generic/*.obj \
            $(ROOT)/Applications/TCPApp/*.obj \
            $(ROOT)/Applications/UDPApp/*.obj \
            $(ROOT)/Applications/PingApp/*.obj \
            $(ROOT)/Base/*.obj \
            $(ROOT)/Util/*.obj \
            $(ROOT)/Nodes/IPSuite/*.obj \
            $(ROOT)/Network/MPLS/*.obj \
            $(ROOT)/Network/LDP/*.obj \
            $(ROOT)/Network/RSVP_TE/*.obj \
            $(ROOT)/Nodes/MPLS/*.obj

# time stamps of other directories (used as dependency)
EXT_DIR_TSTAMPS=$(ROOT)/Network/IPv4/.tstamp \
            $(ROOT)/Network/IPv4d/.tstamp \
            $(ROOT)/Transport/TCP/.tstamp \
            $(ROOT)/Transport/NewTCP/.tstamp \
            $(ROOT)/Transport/UDP/.tstamp \
            $(ROOT)/Transport/Socket/.tstamp \
            $(ROOT)/NetworkInterfaces/.tstamp \
            $(ROOT)/NetworkInterfaces/_802/.tstamp \
            $(ROOT)/NetworkInterfaces/ARP/.tstamp \
            $(ROOT)/NetworkInterfaces/Ethernet/.tstamp \
            $(ROOT)/NetworkInterfaces/PPP/.tstamp \
            $(ROOT)/Applications/Generic/.tstamp \
            $(ROOT)/Applications/TCPApp/.tstamp \
            $(ROOT)/Applications/UDPApp/.tstamp \
            $(ROOT)/Applications/PingApp/.tstamp \
            $(ROOT)/Base/.tstamp \
            $(ROOT)/Util/.tstamp \
            $(ROOT)/Nodes/IPSuite/.tstamp \
            $(ROOT)/Network/MPLS/.tstamp \
            $(ROOT)/Network/LDP/.tstamp \
            $(ROOT)/Network/RSVP_TE/.tstamp \
            $(ROOT)/Nodes/MPLS/.tstamp

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------


!include "..\..\..\ipsuiteconfig.vc"

# User interface libs
CMDENV_LIBS=envir.lib cmdenv.lib
TKENV_LIBS=envir.lib tkenv.lib $(TK_LIBS)

# Simulation kernel
KERNEL_LIBS=sim_std.lib

!if "$(WITH_NETBUILDER)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) nedxml.lib $(XML_LIBS)
!endif

!if "$(WITH_PARSIM)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) $(MPI_LIBS)
!endif

# Simulation kernel and user interface libraries
OMNETPP_LIBS=/libpath:$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(CFLAGS) $(NEDCFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------
# object files in this directory
OBJS= 

# header files generated (from msg files)
GENERATEDHEADERS= 

# subdirectories to recurse into
SUBDIRS= 
SUBDIR_TARGETS= 

$(TARGET): $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_TSTAMPS)  Makefile.vc
	$(LINK) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) $(OMNETPP_LIBS) /out:$(TARGET)
	@echo.>.tstamp

# purify: $(OBJS) $(EXTRA_OBJS)  Makefile.vc
# 	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

$(EXT_DIR_TSTAMPS):
	@echo Error: $(@:/=\) does not exist.
	@echo This means that at least the above dependency directory has not been built.
	@echo Maybe you need to do a top-level make?
	@echo.
	@exit /b 1

subdirs: $(SUBDIR_TARGETS)


#doc: neddoc doxy

#neddoc:
#	@opp_neddoc -a

#doxy: doxy.cfg
#	@doxygen doxy.cfg

generateheaders: $(GENERATEDHEADERS)
	@if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do @cd %%i && nmake /nologo /f Makefile.vc generateheaders && cd .. || exit /b 1

clean:
	-del *.obj *.idb *.pdb $(TARGET)$(EXE_SUFFIX) .tstamp 2>NUL
	-del *_n.cc *_n.h *_m.cc *_m.h 2>NUL
	-del *.vec *.sca 2>NUL
	-for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc clean && cd .. || exit /b 1

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -- *.cc
	if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc depend && cd .. || exit /b 1

makefiles:
	opp_nmakemake -f  -N -w -c ..\..\..\ipsuiteconfig.vc -I$(ROOT)/Network/IPv4 -I$(ROOT)/Network/IPv4d -I$(ROOT)/Transport/TCP -I$(ROOT)/Transport/NewTCP -I$(ROOT)/Transport/UDP -I$(ROOT)/Transport/Socket -I$(ROOT)/NetworkInterfaces -I$(ROOT)/NetworkInterfaces/_802 -I$(ROOT)/NetworkInterfaces/ARP -I$(ROOT)/NetworkInterfaces/Ethernet -I$(ROOT)/NetworkInterfaces/PPP -I$(ROOT)/Applications/Generic -I$(ROOT)/Applications/TCPApp -I$(ROOT)/Applications/UDPApp -I$(ROOT)/Applications/PingApp -I$(ROOT)/Base -I$(ROOT)/Util -I$(ROOT)/Nodes/IPSuite -I$(ROOT)/Network/MPLS -I$(ROOT)/Network/LDP -I$(ROOT)/Network/RSVP_TE -I$(ROOT)/Nodes/MPLS 
	if not "$(SUBDIRS)"=="" for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc makefiles && cd .. || exit /b 1

# "re-makemake" is a deprecated, historic name of the above target
re-makemake: makefiles

# DO NOT DELETE THIS LINE -- make depend depends on it.


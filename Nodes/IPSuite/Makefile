#
#  Makefile for IPSuite
#
#  ** This file was automatically generated by the command:
#  opp_makemake -f -n -r -c ../../ipsuiteconfig -I../../Network/IPv4/Core -I../../Network/IPv4/QoS -I../../Transport/TCPv4 -I../../Transport/UDPv4 -I../../NetworkInterfaces/PPP-old -I../../NetworkInterfaces -I../../NetworkInterfaces/Queues -I../../Applications/Generic -I../../Applications/TCPApp -I../../Applications/PingApp -I../../Util
#

# Name of target to be created (-o option)
TARGET = IPSuite

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# uncomment 1 of the 3 lines to support either serial or parallel operation
KERNEL_LIBS=$(STD_KERNEL_LIBS)
# KERNEL_LIBS=$(PVM_KERNEL_LIBS)
# KERNEL_LIBS=$(MPI_KERNEL_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I../../Network/IPv4/Core -I../../Network/IPv4/QoS -I../../Transport/TCPv4 -I../../Transport/UDPv4 -I../../NetworkInterfaces/PPP-old -I../../NetworkInterfaces -I../../NetworkInterfaces/Queues -I../../Applications/Generic -I../../Applications/TCPApp -I../../Applications/PingApp -I../../Util

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------
# Import generic settings from ../../ipsuiteconfig
include ../../ipsuiteconfig

#------------------------------------------------------------------------------

# subdirectories to recurse into
SUBDIRS= 

# object files in this directory
OBJS= BurstHost_n.o FirstHopRouter_n.o IPNode_n.o KIDSRouter_n.o mytcp4ip_n.o NetworkLayers_n.o Router_n.o StandardHost_n.o tcp4ip_n.o TCPClientNode_n.o TCPClientTest_n.o TCPServerNode_n.o TCPServerTest_n.o UDPHost_n.o  

#------------------------------------------------------------------------------

$(TARGET): $(OBJS) subdirs Makefile
	

purify: $(OBJS) $(EXTRA_OBJS) subdirs Makefile
	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

.PHONY: subdirs $(SUBDIRS)

subdirs: $(SUBDIRS)

BurstHost_n.o: BurstHost_n.cc
	$(CXX) -c $(NEDCOPTS) BurstHost_n.cc

BurstHost_n.cc: BurstHost.ned
	$(NEDC) $(INCLUDE_PATH) BurstHost.ned

FirstHopRouter_n.o: FirstHopRouter_n.cc
	$(CXX) -c $(NEDCOPTS) FirstHopRouter_n.cc

FirstHopRouter_n.cc: FirstHopRouter.ned
	$(NEDC) $(INCLUDE_PATH) FirstHopRouter.ned

IPNode_n.o: IPNode_n.cc
	$(CXX) -c $(NEDCOPTS) IPNode_n.cc

IPNode_n.cc: IPNode.ned
	$(NEDC) $(INCLUDE_PATH) IPNode.ned

KIDSRouter_n.o: KIDSRouter_n.cc
	$(CXX) -c $(NEDCOPTS) KIDSRouter_n.cc

KIDSRouter_n.cc: KIDSRouter.ned
	$(NEDC) $(INCLUDE_PATH) KIDSRouter.ned

mytcp4ip_n.o: mytcp4ip_n.cc
	$(CXX) -c $(NEDCOPTS) mytcp4ip_n.cc

mytcp4ip_n.cc: mytcp4ip.ned
	$(NEDC) $(INCLUDE_PATH) mytcp4ip.ned

NetworkLayers_n.o: NetworkLayers_n.cc
	$(CXX) -c $(NEDCOPTS) NetworkLayers_n.cc

NetworkLayers_n.cc: NetworkLayers.ned
	$(NEDC) $(INCLUDE_PATH) NetworkLayers.ned

Router_n.o: Router_n.cc
	$(CXX) -c $(NEDCOPTS) Router_n.cc

Router_n.cc: Router.ned
	$(NEDC) $(INCLUDE_PATH) Router.ned

StandardHost_n.o: StandardHost_n.cc
	$(CXX) -c $(NEDCOPTS) StandardHost_n.cc

StandardHost_n.cc: StandardHost.ned
	$(NEDC) $(INCLUDE_PATH) StandardHost.ned

tcp4ip_n.o: tcp4ip_n.cc
	$(CXX) -c $(NEDCOPTS) tcp4ip_n.cc

tcp4ip_n.cc: tcp4ip.ned
	$(NEDC) $(INCLUDE_PATH) tcp4ip.ned

TCPClientNode_n.o: TCPClientNode_n.cc
	$(CXX) -c $(NEDCOPTS) TCPClientNode_n.cc

TCPClientNode_n.cc: TCPClientNode.ned
	$(NEDC) $(INCLUDE_PATH) TCPClientNode.ned

TCPClientTest_n.o: TCPClientTest_n.cc
	$(CXX) -c $(NEDCOPTS) TCPClientTest_n.cc

TCPClientTest_n.cc: TCPClientTest.ned
	$(NEDC) $(INCLUDE_PATH) TCPClientTest.ned

TCPServerNode_n.o: TCPServerNode_n.cc
	$(CXX) -c $(NEDCOPTS) TCPServerNode_n.cc

TCPServerNode_n.cc: TCPServerNode.ned
	$(NEDC) $(INCLUDE_PATH) TCPServerNode.ned

TCPServerTest_n.o: TCPServerTest_n.cc
	$(CXX) -c $(NEDCOPTS) TCPServerTest_n.cc

TCPServerTest_n.cc: TCPServerTest.ned
	$(NEDC) $(INCLUDE_PATH) TCPServerTest.ned

UDPHost_n.o: UDPHost_n.cc
	$(CXX) -c $(NEDCOPTS) UDPHost_n.cc

UDPHost_n.cc: UDPHost.ned
	$(NEDC) $(INCLUDE_PATH) UDPHost.ned


doc: neddoc doxy

neddoc:
	opp_neddoc -a

doxy: doxy.cfg
	doxygen doxy.cfg

clean:
	rm -f *.o *_n.cc *_n.h *_m.cc *_m.h $(TARGET)$(EXE_SUFFIX)
	rm -f *.vec *.sca
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) clean); done 

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -- *.cc
	# $(MAKEDEPEND) $(INCLUDE_PATH) -fMakefile.in -- *.cc

re-makemake:
	opp_makemake -f  -n -r -c ../../ipsuiteconfig -I../../Network/IPv4/Core -I../../Network/IPv4/QoS -I../../Transport/TCPv4 -I../../Transport/UDPv4 -I../../NetworkInterfaces/PPP-old -I../../NetworkInterfaces -I../../NetworkInterfaces/Queues -I../../Applications/Generic -I../../Applications/TCPApp -I../../Applications/PingApp -I../../Util   #recreate Makefile

re-makemake-m:
	opp_makemake -f -m  -n -r -c ../../ipsuiteconfig -I../../Network/IPv4/Core -I../../Network/IPv4/QoS -I../../Transport/TCPv4 -I../../Transport/UDPv4 -I../../NetworkInterfaces/PPP-old -I../../NetworkInterfaces -I../../NetworkInterfaces/Queues -I../../Applications/Generic -I../../Applications/TCPApp -I../../Applications/PingApp -I../../Util   #recreate Makefile.in


# DO NOT DELETE THIS LINE -- make depend depends on it.


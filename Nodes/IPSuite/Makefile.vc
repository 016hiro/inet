#
#  Makefile for IPSuite
#
#  ** This file was automatically generated by the command:
#  opp_nmakemake -f -n -r -c ..\..\ipsuiteconfig.vc -I..\..\Network\IPv4\Core -I..\..\Network\IPv4\QoS -I..\..\Transport\TCP -I..\..\Transport\UDP -I..\..\NetworkInterfaces\PPP-old -I..\..\NetworkInterfaces -I..\..\NetworkInterfaces\Queues -I..\..\Applications\Generic -I..\..\Applications\TCPApp -I..\..\Applications\PingApp -I..\..\Util
#
#  By the Perl version of opp_makemake for MSVC
#


# Name of target to be created (-o option)
TARGET = IPSuite

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I..\..\Network\IPv4\Core -I..\..\Network\IPv4\QoS -I..\..\Transport\TCP -I..\..\Transport\UDP -I..\..\NetworkInterfaces\PPP-old -I..\..\NetworkInterfaces -I..\..\NetworkInterfaces\Queues -I..\..\Applications\Generic -I..\..\Applications\TCPApp -I..\..\Applications\PingApp -I..\..\Util

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------


!include "..\..\ipsuiteconfig.vc"

# User interface libs
CMDENV_LIBS=envir.lib cmdenv.lib
TKENV_LIBS=envir.lib tkenv.lib $(TK_LIBS)

# Simulation kernel
KERNEL_LIBS=sim_std.lib

!if "$(WITH_NETBUILDER)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) nedxml.lib $(XML_LIBS)
!endif

!if "$(WITH_PARSIM)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) $(MPI_LIBS)
!endif

# Simulation kernel and user interface libraries
OMNETPP_LIBS=/libpath:$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(CFLAGS) $(NEDCFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------
# object files in this directory
OBJS= BurstHost_n.obj FirstHopRouter_n.obj IPNode_n.obj KIDSRouter_n.obj mytcp4ip_n.obj NetworkLayers_n.obj Router_n.obj StandardHost_n.obj tcp4ip_n.obj TCPClientNode_n.obj TCPClientTest_n.obj TCPServerNode_n.obj TCPServerTest_n.obj UDPHost_n.obj              

# subdirectories to recurse into
SUBDIRS= 
SUBDIR_TARGETS= 

$(TARGET): $(OBJS) Makefile.vc subdirs

# purify: $(OBJS) $(EXTRA_OBJS) subdirs Makefile.vc
# 	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

subdirs: $(SUBDIR_TARGETS)

BurstHost_n.obj: BurstHost_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp BurstHost_n.cc

BurstHost_n.cc: BurstHost.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) BurstHost.ned

FirstHopRouter_n.obj: FirstHopRouter_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp FirstHopRouter_n.cc

FirstHopRouter_n.cc: FirstHopRouter.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) FirstHopRouter.ned

IPNode_n.obj: IPNode_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp IPNode_n.cc

IPNode_n.cc: IPNode.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) IPNode.ned

KIDSRouter_n.obj: KIDSRouter_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp KIDSRouter_n.cc

KIDSRouter_n.cc: KIDSRouter.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) KIDSRouter.ned

mytcp4ip_n.obj: mytcp4ip_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp mytcp4ip_n.cc

mytcp4ip_n.cc: mytcp4ip.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) mytcp4ip.ned

NetworkLayers_n.obj: NetworkLayers_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp NetworkLayers_n.cc

NetworkLayers_n.cc: NetworkLayers.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) NetworkLayers.ned

Router_n.obj: Router_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp Router_n.cc

Router_n.cc: Router.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) Router.ned

StandardHost_n.obj: StandardHost_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp StandardHost_n.cc

StandardHost_n.cc: StandardHost.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) StandardHost.ned

tcp4ip_n.obj: tcp4ip_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp tcp4ip_n.cc

tcp4ip_n.cc: tcp4ip.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) tcp4ip.ned

TCPClientNode_n.obj: TCPClientNode_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp TCPClientNode_n.cc

TCPClientNode_n.cc: TCPClientNode.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) TCPClientNode.ned

TCPClientTest_n.obj: TCPClientTest_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp TCPClientTest_n.cc

TCPClientTest_n.cc: TCPClientTest.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) TCPClientTest.ned

TCPServerNode_n.obj: TCPServerNode_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp TCPServerNode_n.cc

TCPServerNode_n.cc: TCPServerNode.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) TCPServerNode.ned

TCPServerTest_n.obj: TCPServerTest_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp TCPServerTest_n.cc

TCPServerTest_n.cc: TCPServerTest.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) TCPServerTest.ned

UDPHost_n.obj: UDPHost_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp UDPHost_n.cc

UDPHost_n.cc: UDPHost.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) UDPHost.ned


#doc: neddoc doxy

#neddoc:
#	@opp_neddoc -a

#doxy: doxy.cfg
#	@doxygen doxy.cfg

clean:
	-del *.obj *_n.cc *_n.h *_m.cc *_m.h $(TARGET)$(EXE_SUFFIX) 2>NUL
	-del *.vec *.sca 2>NUL
	-for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc clean && cd ..

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -- *.cc

re-makemake:
	opp_nmakemake -f -f -n -r -c ..\..\ipsuiteconfig.vc -I..\..\Network\IPv4\Core -I..\..\Network\IPv4\QoS -I..\..\Transport\TCP -I..\..\Transport\UDP -I..\..\NetworkInterfaces\PPP-old -I..\..\NetworkInterfaces -I..\..\NetworkInterfaces\Queues -I..\..\Applications\Generic -I..\..\Applications\TCPApp -I..\..\Applications\PingApp -I..\..\Util  #recreate Makefile

# DO NOT DELETE THIS LINE -- make depend depends on it.


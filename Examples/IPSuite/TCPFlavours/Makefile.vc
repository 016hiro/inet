#
#  Makefile for TCPFlavours
#
#  ** This file was automatically generated by the command:
#  opp_nmakemake -f -n -c ..\..\..\ipsuiteconfig.vc -I../../../Nodes/IPSuite -I../../../Network/IPv4/Core -I../../../Network/IPv4/QoS -I../../../Transport/TCPv4 -I../../../Transport/UDPv4 -I../../../NetworkInterfaces/PPP-old -I../../../NetworkInterfaces -I../../../NetworkInterfaces/Queues -I../../../Applications/Generic -I../../../Applications/PingApp -I../../../Util
#
#  By the Perl version of opp_makemake for MSVC
#


# Name of target to be created (-o option)
TARGET = TCPFlavours

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# uncomment 1 of the 3 lines to support either serial or parallel operation
KERNEL_LIBS=$(STD_KERNEL_LIBS)
# KERNEL_LIBS=$(PVM_KERNEL_LIBS)
# KERNEL_LIBS=$(MPI_KERNEL_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I../../../Nodes/IPSuite -I../../../Network/IPv4/Core -I../../../Network/IPv4/QoS -I../../../Transport/TCPv4 -I../../../Transport/UDPv4 -I../../../NetworkInterfaces/PPP-old -I../../../NetworkInterfaces -I../../../NetworkInterfaces/Queues -I../../../Applications/Generic -I../../../Applications/PingApp -I../../../Util

# misc additional object and library files to link
EXRA_OBJS=

# object files in subdirectories
SUBDIR_OBJS=

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------


!include "..\..\..\ipsuiteconfig.vc"

# User interface libs
CMDENV_LIBS=envir.lib cmdenv.lib
TKENV_LIBS=envir.lib tkenv.lib $(TK_LIBS)

# Simulation kernel
STD_KERNEL_LIBS=sim_std.lib
MPI_KERNEL_LIBS=sim_mpi.lib $(MPI_LIBS)
PVM_KERNEL_LIBS=sim_pvm.lib $(PVM_LIBS)

# Simulation kernel and user interface libraries
OMNETPP_LIBS=/libpath:$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(CFLAGS) $(NEDCFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------
# Object files from this directory to link
OBJS= comnw_n.obj dropswitch_n.obj ipmodule_n.obj switch_n.obj TCPTester_n.obj comnw.obj  dropswitch.obj  ipmodule.obj  switch.obj  

$(TARGET): $(OBJS) Makefile.vc 

# purify: $(OBJS) $(EXRA_OBJS)  Makefile.vc
# 	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXRA_OBJS) $(SUBDIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

comnw_n.obj: comnw_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp comnw_n.cc

comnw_n.cc: comnw.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) comnw.ned

dropswitch_n.obj: dropswitch_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp dropswitch_n.cc

dropswitch_n.cc: dropswitch.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) dropswitch.ned

ipmodule_n.obj: ipmodule_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp ipmodule_n.cc

ipmodule_n.cc: ipmodule.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) ipmodule.ned

switch_n.obj: switch_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp switch_n.cc

switch_n.cc: switch.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) switch.ned

TCPTester_n.obj: TCPTester_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp TCPTester_n.cc

TCPTester_n.cc: TCPTester.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) TCPTester.ned

comnw.obj: comnw.cc
	$(CXX) -c $(COPTS) /Tp comnw.cc

dropswitch.obj: dropswitch.cc
	$(CXX) -c $(COPTS) /Tp dropswitch.cc

ipmodule.obj: ipmodule.cc
	$(CXX) -c $(COPTS) /Tp ipmodule.cc

switch.obj: switch.cc
	$(CXX) -c $(COPTS) /Tp switch.cc


doc: neddoc doxy

neddoc: 
	@opp_neddoc -a

doxy: doxy.cfg
	@doxygen doxy.cfg

clean:
	-del *.obj *_n.cc *_n.h *_m.cc *_m.h $(TARGET)$(EXE_SUFFIX) 2>NUL
	-del *.vec *.sca 2>NUL

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -- *.cc

re-makemake:
	opp_nmakemake_vc -f   #recreate Makefile

# DO NOT DELETE THIS LINE -- make depend depends on it.


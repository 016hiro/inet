#
#  Makefile for TCPFlavours
#
#  ** This file was automatically generated by the command:
#  makemake -f -m -I../../Interface -I../../TCP ../../Interface ../../TCP
#

# Name of target to be created (-o option)
TARGET = TCPFlavours

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# Uncomment the second line for parallel execution (PVM3) support (-p option):
KERNEL_LIBS=$(STD_KERNEL_LIBS)
# KERNEL_LIBS=$(PVM_KERNEL_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I../../Interface -I../../TCP

# misc additional object and library files to link
EXRA_OBJS=

# object files in subdirectories
SUBDIR_OBJS= ../../Interface/IPDatagram.o ../../Interface/IPInterfacePacket.o ../../Interface/PPPFrame.o ../../Interface/TransportPacket.o ../../TCP/Ip2Tcp.o ../../TCP/TCPClient.o ../../TCP/TCPServer.o ../../TCP/Tcp2Ip.o ../../TCP/TcpIpInterface_n.o ../../TCP/procserver.o ../../TCP/procserver_n.o ../../TCP/tcp4ip_n.o ../../TCP/tcpapp_n.o ../../TCP/tcpmodule.o ../../TCP/tcpmodule_n.o

# Additional libraries (-l option)
LIBS=

#------------------------------------------------------------------------------

NEDC=@NEDC@
CXX=@CXX@
CC=@CC@
AR=@AR@
SHLIB_LD=@SHLIB_LD@

CFLAGS=@CFLAGS@
LDFLAGS=@LDFLAGS@
EXE_SUFFIX=@EXE_SUFFIX@

OMNETPP_INCL_DIR=@OMNETPP_INCL_DIR@
OMNETPP_LIB_DIR=@OMNETPP_LIB_DIR@

TK_LIBS=@TK_LIBS@
PVM_LIBS=@PVM_LIBS@
SYS_LIBS=@SYS_LIBS@
SYS_LIBS_PURE=-lm $(shell $(CXX) -print-file-name=libstdc++.a)

# User interface libs
CMDENV_LIBS=-lenvir -lcmdenv
TKENV_LIBS=-lenvir -ltkenv $(TK_LIBS)

# Simulation kernel
STD_KERNEL_LIBS=-lsim_std
PVM_KERNEL_LIBS=-lsim_pvm $(PVM_LIBS)

# Simulation kernel and user interface libraries
OMNETPP_LIBS=-L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------

# Object files from this directory to link
OBJS= TCPTester_n.o comnw_n.o dropswitch_n.o ipmodule_n.o switch_n.o comnw.o  dropswitch.o  ipmodule.o  switch.o 

$(TARGET): $(OBJS) $(EXRA_OBJS) Makefile subdirs-phony
	$(CC) $(LDFLAGS) $(OBJS) $(EXRA_OBJS) $(SUBDIR_OBJS) $(LIBS) $(OMNETPP_LIBS) -o $(TARGET)

purify: $(OBJS) $(EXRA_OBJS)  subdirs-phony  Makefile
	purify -chain-length="20" -g++=yes gcc $(LDFLAGS) $(OBJS) $(EXRA_OBJS) $(SUBDIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

subdirs-phony:
	(cd ../../Interface && make)
	(cd ../../TCP && make)

TCPTester_n.o: TCPTester_n.cc
	$(CXX) -c $(COPTS) TCPTester_n.cc

TCPTester_n.cc: TCPTester.ned
	$(NEDC) $(INCLUDE_PATH) TCPTester.ned

comnw_n.o: comnw_n.cc
	$(CXX) -c $(COPTS) comnw_n.cc

comnw_n.cc: comnw.ned
	$(NEDC) $(INCLUDE_PATH) comnw.ned

dropswitch_n.o: dropswitch_n.cc
	$(CXX) -c $(COPTS) dropswitch_n.cc

dropswitch_n.cc: dropswitch.ned
	$(NEDC) $(INCLUDE_PATH) dropswitch.ned

ipmodule_n.o: ipmodule_n.cc
	$(CXX) -c $(COPTS) ipmodule_n.cc

ipmodule_n.cc: ipmodule.ned
	$(NEDC) $(INCLUDE_PATH) ipmodule.ned

switch_n.o: switch_n.cc
	$(CXX) -c $(COPTS) switch_n.cc

switch_n.cc: switch.ned
	$(NEDC) $(INCLUDE_PATH) switch.ned

comnw.o: comnw.cc
	$(CXX) -c $(COPTS) comnw.cc

dropswitch.o: dropswitch.cc
	$(CXX) -c $(COPTS) dropswitch.cc

ipmodule.o: ipmodule.cc
	$(CXX) -c $(COPTS) ipmodule.cc

switch.o: switch.cc
	$(CXX) -c $(COPTS) switch.cc

clean:
	rm -f *.o *_n.cc $(TARGET)$(EXE_SUFFIX)
	rm -f *.vec *.sca

depend:
	makedepend -Y $(INCLUDE_PATH) -- *.cc
	makedepend -Y $(INCLUDE_PATH) -fMakefile.in -- *.cc

re-makemake:
	makemake -f  -I../../Interface -I../../TCP ../../Interface ../../TCP   #recreate Makefile

re-makemake-m:
	makemake -f -m  -I../../Interface -I../../TCP ../../Interface ../../TCP   #recreate Makefile.in

# DO NOT DELETE THIS LINE -- make depend depends on it.


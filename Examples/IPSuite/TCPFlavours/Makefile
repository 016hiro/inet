#
#  Makefile for TCPFlavours
#
#  ** This file was automatically generated by the command:
#  opp_makemake -f -w -c ../../../ipsuiteconfig -I$(ROOT)/Network/IPv4/Core -I$(ROOT)/Network/IPv4/QoS -I$(ROOT)/Transport/TCP -I$(ROOT)/Transport/UDP -I$(ROOT)/Transport/Socket -I$(ROOT)/NetworkInterfaces -I$(ROOT)/NetworkInterfaces/PPP-old -I$(ROOT)/NetworkInterfaces/Queues -I$(ROOT)/Applications/Generic -I$(ROOT)/Applications/TCPApp -I$(ROOT)/Applications/PingApp -I$(ROOT)/Util -I$(ROOT)/Nodes/IPSuite
#

# Name of target to be created (-o option)
TARGET = TCPFlavours

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# uncomment 1 of the 3 lines to support either serial or parallel operation
KERNEL_LIBS=$(STD_KERNEL_LIBS)
# KERNEL_LIBS=$(PVM_KERNEL_LIBS)
# KERNEL_LIBS=$(MPI_KERNEL_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I$(ROOT)/Network/IPv4/Core -I$(ROOT)/Network/IPv4/QoS -I$(ROOT)/Transport/TCP -I$(ROOT)/Transport/UDP -I$(ROOT)/Transport/Socket -I$(ROOT)/NetworkInterfaces -I$(ROOT)/NetworkInterfaces/PPP-old -I$(ROOT)/NetworkInterfaces/Queues -I$(ROOT)/Applications/Generic -I$(ROOT)/Applications/TCPApp -I$(ROOT)/Applications/PingApp -I$(ROOT)/Util -I$(ROOT)/Nodes/IPSuite

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS= $(ROOT)/Network/IPv4/Core/*.o $(ROOT)/Network/IPv4/QoS/*.o $(ROOT)/Transport/TCP/*.o $(ROOT)/Transport/UDP/*.o $(ROOT)/Transport/Socket/*.o $(ROOT)/NetworkInterfaces/*.o $(ROOT)/NetworkInterfaces/PPP-old/*.o $(ROOT)/NetworkInterfaces/Queues/*.o $(ROOT)/Applications/Generic/*.o $(ROOT)/Applications/TCPApp/*.o $(ROOT)/Applications/PingApp/*.o $(ROOT)/Util/*.o $(ROOT)/Nodes/IPSuite/*.o

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------
# Import generic settings from ../../../ipsuiteconfig
include ../../../ipsuiteconfig

#------------------------------------------------------------------------------

# subdirectories to recurse into
SUBDIRS= 

# object files in this directory
OBJS= comnw_n.o dropswitch_n.o ipmodule_n.o switch_n.o TCPTester_n.o  comnw.o  dropswitch.o  ipmodule.o  switch.o  

#------------------------------------------------------------------------------

$(TARGET): $(OBJS) $(EXTRA_OBJS) Makefile
	$(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) $(OMNETPP_LIBS) -o $(TARGET)

purify: $(OBJS) $(EXTRA_OBJS) Makefile
	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

.PHONY: subdirs $(SUBDIRS)

subdirs: $(SUBDIRS)

comnw_n.o: comnw_n.cc
	$(CXX) -c $(NEDCOPTS) comnw_n.cc

comnw_n.cc: comnw.ned
	$(NEDC) $(INCLUDE_PATH) comnw.ned

dropswitch_n.o: dropswitch_n.cc
	$(CXX) -c $(NEDCOPTS) dropswitch_n.cc

dropswitch_n.cc: dropswitch.ned
	$(NEDC) $(INCLUDE_PATH) dropswitch.ned

ipmodule_n.o: ipmodule_n.cc
	$(CXX) -c $(NEDCOPTS) ipmodule_n.cc

ipmodule_n.cc: ipmodule.ned
	$(NEDC) $(INCLUDE_PATH) ipmodule.ned

switch_n.o: switch_n.cc
	$(CXX) -c $(NEDCOPTS) switch_n.cc

switch_n.cc: switch.ned
	$(NEDC) $(INCLUDE_PATH) switch.ned

TCPTester_n.o: TCPTester_n.cc
	$(CXX) -c $(NEDCOPTS) TCPTester_n.cc

TCPTester_n.cc: TCPTester.ned
	$(NEDC) $(INCLUDE_PATH) TCPTester.ned

comnw.o: comnw.cc
	$(CXX) -c $(COPTS) comnw.cc

dropswitch.o: dropswitch.cc
	$(CXX) -c $(COPTS) dropswitch.cc

ipmodule.o: ipmodule.cc
	$(CXX) -c $(COPTS) ipmodule.cc

switch.o: switch.cc
	$(CXX) -c $(COPTS) switch.cc


#doc: neddoc doxy

#neddoc:
#	opp_neddoc -a

#doxy: doxy.cfg
#	doxygen doxy.cfg

clean:
	rm -f *.o *_n.cc *_n.h *_m.cc *_m.h $(TARGET)$(EXE_SUFFIX)
	rm -f *.vec *.sca
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) clean); done 

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -- *.cc
	# $(MAKEDEPEND) $(INCLUDE_PATH) -fMakefile.in -- *.cc

re-makemake:
	opp_makemake -f  -w -c ../../../ipsuiteconfig -I$(ROOT)/Network/IPv4/Core -I$(ROOT)/Network/IPv4/QoS -I$(ROOT)/Transport/TCP -I$(ROOT)/Transport/UDP -I$(ROOT)/Transport/Socket -I$(ROOT)/NetworkInterfaces -I$(ROOT)/NetworkInterfaces/PPP-old -I$(ROOT)/NetworkInterfaces/Queues -I$(ROOT)/Applications/Generic -I$(ROOT)/Applications/TCPApp -I$(ROOT)/Applications/PingApp -I$(ROOT)/Util -I$(ROOT)/Nodes/IPSuite   #recreate Makefile

re-makemake-m:
	opp_makemake -f -m  -w -c ../../../ipsuiteconfig -I$(ROOT)/Network/IPv4/Core -I$(ROOT)/Network/IPv4/QoS -I$(ROOT)/Transport/TCP -I$(ROOT)/Transport/UDP -I$(ROOT)/Transport/Socket -I$(ROOT)/NetworkInterfaces -I$(ROOT)/NetworkInterfaces/PPP-old -I$(ROOT)/NetworkInterfaces/Queues -I$(ROOT)/Applications/Generic -I$(ROOT)/Applications/TCPApp -I$(ROOT)/Applications/PingApp -I$(ROOT)/Util -I$(ROOT)/Nodes/IPSuite   #recreate Makefile.in


# DO NOT DELETE THIS LINE -- make depend depends on it.
comnw.o: comnw.cc \
  nw.h \
  ip.h
comnw_n.o: comnw_n.cc
dropswitch.o: dropswitch.cc \
  nw.h \
  ip.h
dropswitch_n.o: dropswitch_n.cc
ipmodule.o: ipmodule.cc \
  ip.h
ipmodule_n.o: ipmodule_n.cc
switch.o: switch.cc \
  nw.h \
  ip.h
switch_n.o: switch_n.cc
TCPTester_n.o: TCPTester_n.cc

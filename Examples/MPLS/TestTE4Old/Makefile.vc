#
#  Makefile for TestTE4Old
#
#  ** This file was automatically generated by the command:
#  opp_nmakemake -f -w -c ..\..\..\ipsuiteconfig.vc -I..\Tester -I$(ROOT)/Network/IPv4/Core -I$(ROOT)/Network/IPv4/QoS -I$(ROOT)/Transport/TCP -I$(ROOT)/Transport/UDP -I$(ROOT)/Transport/Socket -I$(ROOT)/NetworkInterfaces -I$(ROOT)/NetworkInterfaces/PPP-old -I$(ROOT)/NetworkInterfaces/Queues -I$(ROOT)/Applications/Generic -I$(ROOT)/Applications/TCPApp -I$(ROOT)/Applications/PingApp -I$(ROOT)/Util -I$(ROOT)/Nodes/IPSuite -I$(ROOT)/Network/MPLS -I$(ROOT)/Network/LDP -I$(ROOT)/Network/RSVP_TE -I$(ROOT)/Nodes/MPLS C:/home/tools/libxml2-2.5.4.win32/lib/libxml2.lib C:/home/tools/iconv-1.8.win32/lib/iconv.lib
#
#  By the Perl version of opp_makemake for MSVC
#


# Name of target to be created (-o option)
TARGET = TestTE4Old.exe

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# uncomment 1 of the 3 lines to support either serial or parallel operation
KERNEL_LIBS=$(STD_KERNEL_LIBS)
# KERNEL_LIBS=$(PVM_KERNEL_LIBS)
# KERNEL_LIBS=$(MPI_KERNEL_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I..\Tester -I$(ROOT)/Network/IPv4/Core -I$(ROOT)/Network/IPv4/QoS -I$(ROOT)/Transport/TCP -I$(ROOT)/Transport/UDP -I$(ROOT)/Transport/Socket -I$(ROOT)/NetworkInterfaces -I$(ROOT)/NetworkInterfaces/PPP-old -I$(ROOT)/NetworkInterfaces/Queues -I$(ROOT)/Applications/Generic -I$(ROOT)/Applications/TCPApp -I$(ROOT)/Applications/PingApp -I$(ROOT)/Util -I$(ROOT)/Nodes/IPSuite -I$(ROOT)/Network/MPLS -I$(ROOT)/Network/LDP -I$(ROOT)/Network/RSVP_TE -I$(ROOT)/Nodes/MPLS

# misc additional object and library files to link
EXTRA_OBJS=C:\home\tools\libxml2-2.5.4.win32\lib\libxml2.lib \
            C:\home\tools\iconv-1.8.win32\lib\iconv.lib

# object files from other directories to link with
EXT_DIR_OBJS=..\Tester/*.obj \
            $(ROOT)/Network/IPv4/Core/*.obj \
            $(ROOT)/Network/IPv4/QoS/*.obj \
            $(ROOT)/Transport/TCP/*.obj \
            $(ROOT)/Transport/UDP/*.obj \
            $(ROOT)/Transport/Socket/*.obj \
            $(ROOT)/NetworkInterfaces/*.obj \
            $(ROOT)/NetworkInterfaces/PPP-old/*.obj \
            $(ROOT)/NetworkInterfaces/Queues/*.obj \
            $(ROOT)/Applications/Generic/*.obj \
            $(ROOT)/Applications/TCPApp/*.obj \
            $(ROOT)/Applications/PingApp/*.obj \
            $(ROOT)/Util/*.obj \
            $(ROOT)/Nodes/IPSuite/*.obj \
            $(ROOT)/Network/MPLS/*.obj \
            $(ROOT)/Network/LDP/*.obj \
            $(ROOT)/Network/RSVP_TE/*.obj \
            $(ROOT)/Nodes/MPLS/*.obj

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------


!include "..\..\..\ipsuiteconfig.vc"

# User interface libs
CMDENV_LIBS=envir.lib cmdenv.lib
TKENV_LIBS=envir.lib tkenv.lib $(TK_LIBS)

# Simulation kernel
STD_KERNEL_LIBS=sim_std.lib
MPI_KERNEL_LIBS=sim_mpi.lib $(MPI_LIBS)
PVM_KERNEL_LIBS=sim_pvm.lib $(PVM_LIBS)

# Simulation kernel and user interface libraries
OMNETPP_LIBS=/libpath:$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(CFLAGS) $(NEDCFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------
# object files in this directory
OBJS= RSVPNet_n.obj 

# subdirectories to recurse into
SUBDIRS= 

$(TARGET): $(OBJS) $(EXTRA_OBJS)  Makefile.vc
	$(LINK) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) $(OMNETPP_LIBS) /out:$(TARGET)

# purify: $(OBJS) $(EXTRA_OBJS)  Makefile.vc
# 	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

subdirs: $(SUBDIRS)

RSVPNet_n.obj: RSVPNet_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp RSVPNet_n.cc

RSVPNet_n.cc: RSVPNet.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) RSVPNet.ned


#doc: neddoc doxy

#neddoc:
#	@opp_neddoc -a

#doxy: doxy.cfg
#	@doxygen doxy.cfg

clean:
	-del *.obj *_n.cc *_n.h *_m.cc *_m.h $(TARGET)$(EXE_SUFFIX) 2>NUL
	-del *.vec *.sca 2>NUL
	-for %%i in (  ) do cd %%i && nmake /nologo /f Makefile.vc clean && cd ..

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -- *.cc

re-makemake:
	opp_nmakemake_vc -f   #recreate Makefile

# DO NOT DELETE THIS LINE -- make depend depends on it.


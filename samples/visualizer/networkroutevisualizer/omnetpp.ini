[General]

[Config EnablingNetworkRoutes]
description = Enabling network routes
network = NetworkRouteSimple

# Application parameters
*.source.numPingApps = 1
*.source.pingApp[0].destAddr = "destination"

# Visualizer parameters
*.routeVisualizer.*.displayRoutes = true

[Config StaticNetworkRoutes]
description = Static network routes
network = NetworkRouteExtended

# Application parameters
*.source*.numPingApps = 1
*.source1.pingApp[0].destAddr = "destination1"
*.source2.pingApp[0].destAddr = "destination2"

# Visualizer parameters
*.visualizer.*.networkRouteVisualizer.displayRoutes = true
*.visualizer.*.networkRouteVisualizer.packetFilter = "ping*"
*.visualizer.*.networkRouteVisualizer.fadeOutMode = "simulationTime"
*.visualizer.*.networkRouteVisualizer.fadeOutTime = 1.4s


[Config NetworkRoutesDynamic]
description = Displaying dynamic network routes
network = DynamicNetworkRoutes

# Application parameters
*.source.numPingApps = 1
*.source.pingApp[0].destAddr = "destination"

# mobility parameters
*.*.mobilityType = "MassMobility"
*.*.mobility.speed = 5mps
*.*.mobility.changeAngleBy = uniform(-45deg, 45deg)
*.*.mobility.changeInterval = exponential(100s)
*.*.mobility.constraintAreaMinX = 200m
*.*.mobility.constraintAreaMinY = 40m
*.*.mobility.constraintAreaMinZ = 0m
*.*.mobility.constraintAreaMaxX = 650m
*.*.mobility.constraintAreaMaxY = 600m
*.*.mobility.constraintAreaMaxZ = 0m

# wlan parameters
*.*.wlan[*].radio.transmitter.power = 2mW # reduces communication range to get a non-trivial path between source and destination

# Visualizer parameters
*.visualizer.*.networkRouteVisualizer.displayRoutes = true
*.visualizer.*.networkRouteVisualizer.packetFilter = "ping*"
*.visualizer.*.networkRouteVisualizer.fadeOutMode = "simulationTime"
*.visualizer.*.networkRouteVisualizer.fadeOutTime = 1.4s


[Config ChangingNetworkRoutes]
description = Changing network routes
network = NetworkRouteComplex

# Application parameters
*.router*.hasRIP = true
**.hasStatus = true

*.*Source.numPingApps = 1
*.wiredSource.pingApp[0].destAddr = "wiredDestination"
*.wirelessSource.pingApp[0].destAddr = "wirelessDestination"

*.*.wlan[*].radio.transmitter.power = 3mW

*.accessPoint0.wlan[0].mgmt.ssid = "inet"
*.wirelessSource.wlan[0].agent.default_ssid = "inet"
*.accessPoint1.wlan[0].mgmt.ssid = "omnet"
*.wirelessDestination.wlan[0].agent.default_ssid = "omnet"

*.configurator.config = xmldoc("configuration.xml")

# Lifecycle parameters
*.scenarioManager.script = xmldoc("changeRoute.xml")

# Visualizer parameters
*.visualizer.*.interfaceTableVisualizer.displayInterfaceTables = true
*.visualizer.*.interfaceTableVisualizer.format = "%n"
*.visualizer.*.interfaceTableVisualizer.nodeFilter = "not accessPoint*"
*.visualizer.*.interfaceTableVisualizer.interfaceFilter = "wlan*"

*.visualizer.*.networkRouteVisualizer.displayRoutes = true
*.visualizer.*.networkRouteVisualizer.packetFilter = "ping* and not *reply"
*.visualizer.*.networkRouteVisualizer.fadeOutMode = "simulationTime"
*.visualizer.*.networkRouteVisualizer.fadeOutTime = 1.4s
*.visualizer.*.networkRouteVisualizer.nodeFilter = "not wireless*"
*.visualizer.*.networkRouteVisualizer.interfaceFilter = "not (eth* or ppp* or wlan*)"


# Testing parameters
# *.routeVisualizer.*.lineShiftMode = "none"			# --What is x,y,z?
# *.routeVisualizer.*.fadeOutAnimationSpeed = 100000		# -- ???
# *.routeVisualizer.*.interfaceFilter = "not(*eth* or *ppp*)"	# -- Nem szur
# *.routeVisualizer.*.nodeFilter = ""				# -- Nem szur


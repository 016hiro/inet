#
#  Makefile for Socket
#
#  ** This file was automatically generated by the command:
#  opp_makemake -f -N -n -r -c ../../ipsuiteconfig -I../TCP -I../UDP -I../../Network/IPv4/Core -I../../Base -I../../Util
#

# Name of target to be created (-o option)
TARGET = Socket

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I../TCP -I../UDP -I../../Network/IPv4/Core -I../../Base -I../../Util

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with (wildcard needed to prevent "no such file *.o" errors)
EXT_DIR_OBJS=$(wildcard )

# time stamps of other directories (used as dependency)
EXT_DIR_TSTAMPS=

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------
# Import generic settings from ../../ipsuiteconfig
include ../../ipsuiteconfig

#------------------------------------------------------------------------------

# subdirectories to recurse into
SUBDIRS= 

# object files in this directory
OBJS=  SocketInterfacePacket.o socketlayer.o sockets.o

# header files generated (from msg files)
GENERATEDHEADERS= 

#------------------------------------------------------------------------------

$(TARGET): $(OBJS) subdirs Makefile
	echo>.tstamp
	
$(OBJS) : $(GENERATEDHEADERS)


purify: $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_TSTAMPS) subdirs Makefile
	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

.PHONY: subdirs $(SUBDIRS)

subdirs: $(SUBDIRS)

SocketInterfacePacket.o: SocketInterfacePacket.cc
	$(CXX) -c $(COPTS) SocketInterfacePacket.cc

socketlayer.o: socketlayer.cc
	$(CXX) -c $(COPTS) socketlayer.cc

sockets.o: sockets.cc
	$(CXX) -c $(COPTS) sockets.cc


#doc: neddoc doxy

#neddoc:
#	opp_neddoc -a

#doxy: doxy.cfg
#	doxygen doxy.cfg

generateheaders: $(GENERATEDHEADERS)
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) generateheaders) || exit 1; done

clean:
	rm -f *.o *_n.cc *_n.h *_m.cc *_m.h $(TARGET)$(EXE_SUFFIX) .tstamp
	rm -f *.vec *.sca
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) clean); done

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -- *.cc
	# $(MAKEDEPEND) $(INCLUDE_PATH) -fMakefile.in -- *.cc
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) depend) || exit 1; done

makefiles:
	# recreate Makefile
	opp_makemake -f  -N -n -r -c ../../ipsuiteconfig -I../TCP -I../UDP -I../../Network/IPv4/Core -I../../Base -I../../Util 
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) makefiles) || exit 1; done

makefile-ins:
	# recreate Makefile.in
	opp_makemake -f -m  -N -n -r -c ../../ipsuiteconfig -I../TCP -I../UDP -I../../Network/IPv4/Core -I../../Base -I../../Util 
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) makefile-ins) || exit 1; done

# "re-makemake" and "re-makemake-m" are deprecated, historic names of the above two targets
re-makemake: makefiles
re-makemake-m: makefile-ins


# DO NOT DELETE THIS LINE -- make depend depends on it.
SocketInterfacePacket.o: SocketInterfacePacket.cc \
  SocketInterfacePacket.h \
  sockets.h \
  ../TCP/pcb.h \
  ../../Network/IPv4/Core/IPAddress.h
socketlayer.o: socketlayer.cc \
  socketlayer.h \
  sockets.h \
  ../../Network/IPv4/Core/RoutingTable.h \
  SocketInterfacePacket.h \
  ../UDP/UDPControlInfo_m.h \
  ../TCP/pcb.h \
  ../../Network/IPv4/Core/IPAddress.h \
  ../../Base/ipsuite_defs.h
sockets.o: sockets.cc \
  sockets.h \
  ../TCP/tcpcb.h \
  ../TCP/pcb.h \
  ../../Network/IPv4/Core/IPAddress.h \
  ../TCP/tcp.h

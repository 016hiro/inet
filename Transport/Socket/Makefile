#
#  Makefile for Socket
#
#  ** This file was automatically generated by the command:
#  opp_makemake -f -n -r -c ../../ipsuiteconfig -I../TCP -I../../Network/IPv4/Core -I../../Util
#

# Name of target to be created (-o option)
TARGET = Socket

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# uncomment 1 of the 3 lines to support either serial or parallel operation
KERNEL_LIBS=$(STD_KERNEL_LIBS)
# KERNEL_LIBS=$(PVM_KERNEL_LIBS)
# KERNEL_LIBS=$(MPI_KERNEL_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH= -I../TCP -I../../Network/IPv4/Core -I../../Util

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------
# Import generic settings from ../../ipsuiteconfig
include ../../ipsuiteconfig

#------------------------------------------------------------------------------

# subdirectories to recurse into
SUBDIRS= 

# object files in this directory
OBJS= socketlayer_n.o  SocketInterfacePacket.o socketlayer.o  sockets.o

#------------------------------------------------------------------------------

$(TARGET): $(OBJS) subdirs Makefile
	

purify: $(OBJS) $(EXTRA_OBJS) subdirs Makefile
	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

.PHONY: subdirs $(SUBDIRS)

subdirs: $(SUBDIRS)

socketlayer_n.o: socketlayer_n.cc
	$(CXX) -c $(NEDCOPTS) socketlayer_n.cc

socketlayer_n.cc: socketlayer.ned
	$(NEDC) $(INCLUDE_PATH) socketlayer.ned

SocketInterfacePacket.o: SocketInterfacePacket.cc
	$(CXX) -c $(COPTS) SocketInterfacePacket.cc

socketlayer.o: socketlayer.cc
	$(CXX) -c $(COPTS) socketlayer.cc

sockets.o: sockets.cc
	$(CXX) -c $(COPTS) sockets.cc


#doc: neddoc doxy

#neddoc:
#	opp_neddoc -a

#doxy: doxy.cfg
#	doxygen doxy.cfg

clean:
	rm -f *.o *_n.cc *_n.h *_m.cc *_m.h $(TARGET)$(EXE_SUFFIX)
	rm -f *.vec *.sca
	for i in $(SUBDIRS); do (cd $$i && $(MAKE) clean); done 

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -- *.cc
	# $(MAKEDEPEND) $(INCLUDE_PATH) -fMakefile.in -- *.cc

re-makemake:
	opp_makemake -f  -n -r -c ../../ipsuiteconfig -I../TCP -I../../Network/IPv4/Core -I../../Util   #recreate Makefile

re-makemake-m:
	opp_makemake -f -m  -n -r -c ../../ipsuiteconfig -I../TCP -I../../Network/IPv4/Core -I../../Util   #recreate Makefile.in


# DO NOT DELETE THIS LINE -- make depend depends on it.
SocketInterfacePacket.o: SocketInterfacePacket.cc \
  SocketInterfacePacket.h \
  sockets.h \
  ../TCP/pcb.h \
  ../../Network/IPv4/Core/in_addr.h \
  ../../Network/IPv4/Core/in_port.h \
  ../../Util/basic_consts.h
socketlayer.o: socketlayer.cc \
  socketlayer.h \
  ../../Network/IPv4/Core/RoutingTable.h \
  SocketInterfacePacket.h \
  ../TCP/TransportInterfacePacket.h \
  ../TCP/tcp.h \
  sockets.h \
  ../TCP/pcb.h \
  ../../Network/IPv4/Core/in_addr.h \
  ../../Network/IPv4/Core/in_port.h \
  ../../Util/basic_consts.h \
  ../../Network/IPv4/Core/ip_address.h \
  ../../Network/IPv4/Core/IPInterfacePacket.h
socketlayer_n.o: socketlayer_n.cc
sockets.o: sockets.cc \
  sockets.h \
  ../TCP/tcpcb.h \
  ../TCP/pcb.h \
  ../../Network/IPv4/Core/in_addr.h \
  ../../Network/IPv4/Core/in_port.h \
  ../../Util/basic_consts.h \
  ../TCP/tcp.h

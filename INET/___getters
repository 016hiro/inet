"is":
-----
bool active()
bool valid()


"get", with capitalization etc (?):
------------------------------------
simtime_t DIFSPeriod()   ==> getDIFS()
simtime_t EIFSPeriod()   ==> getEIFS()
simtime_t PIFSPeriod()   ==> getPIFS()
simtime_t SIFSPeriod()   ==> getSIFS()
simtime_t SlotPeriod()   ==> getSlotTime()
int mtu()                ==> getMTU()
IN_Port rtcpPort()
IN_Port rtpPort()
SDESChunk *sdesChunk()
cArray *rtcpPackets()
cArray *sdesChunks()


"get" -- to be revised!!
------------------------
bool ipForward()
double _maxRandomFactor()
double _minRandomFactor()
int multicastInterface()   ==> multicastInterfaceId() ??  [setter too!]
int packetsLostCumulative() ==> numTotalPacketsLost()?  [setter too!]

uint _maxFinalRtrAdvertisements()
uint _maxInitialRtrAdvertisements()
uint _maxMulticastSolicit()
uint _maxNeighbourAdvertisement()
uint _maxRtrSolicitations()
uint _maxUnicastSolicit()
simtime_t _delayFirstProbeTime()
simtime_t _maxAnycastDelayTime()
simtime_t _maxInitialRtrAdvertInterval()
simtime_t _maxRADelayTime()
simtime_t _maxRtrSolicitationDelay()
simtime_t _minDelayBetweenRAs()
simtime_t _reachableTime()
simtime_t _retransTimer()
simtime_t _rtrSolicitationInterval()
IPv4InterfaceData *ipv4()
IPv6InterfaceData *ipv6()
protocol3()
protocol4()

initialSeqNum() ==> rather chooseInitialSeqNum()?????

a bit awkward: getNetmask().getNetmaskLength();

getInetAddress()...   [used to be: inetAddress()]

simtime_t backoff() ==> computeBackoff()
contentionWindow() ==> computeContentionWindow() ?? [was: contentionWindow()]


"get with args -- to be revised
===============================
IPAddress routerIdOf(cModule *host)
IPvXAddress addressOf(cModule *host, const char *ifname, int addrType=ADDR_PREFER_IPv6)
IPvXAddress addressOf(cModule *host, int addrType=ADDR_PREFER_IPv6)
InterfaceTable *interfaceTableOf(cModule *host)
NotificationBoard *notificationBoardOf(cModule *host)
RoutingTable *routingTableOf(cModule *host)
RoutingTable6 *routingTable6Of(cModule *host)

revise getGatewayForDestAddr(const IPAddress& dest) ==> determineGatewayForDestAddr() ???


InterfaceEntry *interfaceAt(int pos) ==> getInterface(int) ??

ReceptionReport *receptionReport(simtime_t now)  ==> createReceptionReport??
SenderReport *senderReport(simtime_t now) ==> createSenderReport ??

bool AnyNeighborInStates (int states)
bool DestinationIsUnreachable (OSPFLSA* lsa)
bool localDeliver(const IPAddress& dest)
bool localDeliver(const IPv6Address& dest)

bool packetOk(double snirMin, int length, double bitrate)   ==> isPacketOK ??
bool packetOk(double snirMin, int lengthMPDU, double bitrate)
bool packetOk(double, int)

double bitErrorRate(double snir, double bandwidth, double bitrate) ==> calculateBER ???

double frameDuration(Ieee80211Frame *msg)   ==> calculateFrameDuration() ??
double frameDuration(int bits, double bitrate)

int nodepos(const EroVector& ERO, IPAddress node) ==> find() ??

simtime_t BackoffPeriod(Ieee80211Frame *msg, int r)  ==> calculateBackoffPeriod
simtime_t packetDuration(int bits)  ==> calculatePacketDuration
simtime_t timeOut(_802_11frameType type, simtime_t last_frame_duration)  ==> calculateTimeout


skip these??
============
const char *eventName(int event)
const char *indicationName(int code)
const char *modeName(int mode)
const char *notificationCategoryName(int category)
const char *pktTypeName(int type)
const char *routeSrcName(RouteSrc src)
const char *scopeName(Scope s)
const char *stateName(ReachabilityState state)
const char *stateName(State state)
const char *stateName(int state)
const char *timerTypeName(int type)
const char* logName(void)

add "get" and "For"? (
======================
TCPSocket *peerSocket(IPAddress peerAddr)
TCPSocket *peerSocketSoft(IPAddress peerAddr)
unsigned int linkIndex(IPAddress advrouter, IPAddress linkid)
unsigned int linkIndex(IPAddress localInf)

IPAddress peerRemoteInterface(IPAddress peerIP)  ????
IPAddress primaryAddress(IPAddress localInf)   ???



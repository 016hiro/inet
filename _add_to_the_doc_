> 3. The PPP capacity is different on routers and host? Irene told me 
> that you stop the simulation if you fill up the buffer?
>     I assumed that one can configure the number of packets in the PPP 
> TX queue. If one puts in more packets than the limit, they are just dropped.

Yes, interface implementations use different queueing in routers and hosts. This is a deliberate decision, and recent INET feature.

In routers EthernetRouterInterface or PPPRouterInterface is used. In addition to the Ethernet MAC and PPP modules, xxxxRouterInterface also contains a configurable router queue. There are several kinds of queues which you may want to plug in there: plain drop-tail queue, subqueue (drop-tail) with QoS support and configurable packet classifier, and RED queue -- you might want to implement others. These queues are in Network/Queue. When these queues exceed the limit, they just drop the packet of course. (They also record queue length and packet drops info into output vectors.)
 
In hosts, EthernetInterface and PPPInterface should be used. Here there's no separate queue, only the ones built into the Ethernet MAC and PPP itself: queue size is conceptually modelled as infinite. In practice there is a limit, yes, but it's supposed to be set to very large (well over 1000), and its task is to kill bogus simulations before they'd eat up all system resources on the computer. (If the local app on the host floods the local network interface, that can't be a realistic app model, it's probably a bug.) This limit is not supposed to be set to 100 or so. It is currently set to 1000 in EthernetInterface.ned:

module EthernetInterface
    [...]
        txQueueLimit = 1000; // may be increased if necessary

Maybe 1000 is too small though. Now I increased it to 100,000 in the CVS, because I don't want it to confuse others as well.


#
#  Makefile for IPSuite
#
#  ** This file was automatically generated by the command:
#  opp_nmakemake -f -n -r -c ipsuiteconfig.vc
#
#  By the Perl version of opp_makemake for MSVC
#


# Name of target to be created (-o option)
TARGET = IPSuite

# User interface (uncomment one) (-u option)
# USERIF_LIBS=$(CMDENV_LIBS)
USERIF_LIBS=$(TKENV_LIBS)

# .ned or .h include paths with -I
INCLUDE_PATH=

# misc additional object and library files to link
EXTRA_OBJS=

# object files from other directories to link with
EXT_DIR_OBJS=

# Additional libraries (-L option -l option)
LIBS=

#------------------------------------------------------------------------------


!include "ipsuiteconfig.vc"

# User interface libs
CMDENV_LIBS=envir.lib cmdenv.lib
TKENV_LIBS=envir.lib tkenv.lib $(TK_LIBS)

# Simulation kernel
KERNEL_LIBS=sim_std.lib

!if "$(WITH_NETBUILDER)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) nedxml.lib $(XML_LIBS)
!endif

!if "$(WITH_PARSIM)"=="yes"
KERNEL_LIBS= $(KERNEL_LIBS) $(MPI_LIBS)
!endif

# Simulation kernel and user interface libraries
OMNETPP_LIBS=/libpath:$(OMNETPP_LIB_DIR) $(USERIF_LIBS) $(KERNEL_LIBS) $(SYS_LIBS)

COPTS=$(CFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)
NEDCOPTS=$(CFLAGS) $(NEDCFLAGS) $(INCLUDE_PATH) -I$(OMNETPP_INCL_DIR)

#------------------------------------------------------------------------------
# object files in this directory
OBJS= index_n.obj ipsuite-doc_n.obj mpls-doc_n.obj

# subdirectories to recurse into
SUBDIRS= Applications Documentation Examples Network NetworkInterfaces Nodes PHY Tests Transport Util
SUBDIR_TARGETS=  Applications_dir Documentation_dir Examples_dir Network_dir NetworkInterfaces_dir Nodes_dir PHY_dir Tests_dir Transport_dir Util_dir

# inserted from file 'makefrag.vc':
# this file automatically gets inserted into Makefiles generated by opp_makemake

# override SUBDIRS, leaving out the Documentation directory from the build
SUBDIRS= Applications Examples Network NetworkInterfaces Nodes PHY Tests Transport Util
SUBDIR_TARGETS= Applications_dir Examples_dir Network_dir NetworkInterfaces_dir Nodes_dir PHY_dir Tests_dir Transport_dir Util_dir

# preserve default target
all: $(TARGET)

# add dependencies across directories
Network_dir Transport_dir NetworkInterfaces_dir PHY_dir Applications_dir : Util_dir 
Nodes_dir : Network_dir Transport_dir NetworkInterfaces_dir PHY_dir Applications_dir 
Examples_dir Tests_dir : Nodes_dir

# documentation targets
DOC_DIR=Documentation

docs: doxy neddoc

doxy:
	doxygen doxy.cfg

neddoc: 
	opp_neddoc -a -o $(DOC_DIR)/neddoc -t $(DOC_DIR)/doxy/doxytags.xml -d ../doxy

neddoc-without-doxy:
	opp_neddoc -a -o $(DOC_DIR)/neddoc


$(TARGET): $(OBJS) Makefile.vc subdirs

# purify: $(OBJS) $(EXTRA_OBJS) subdirs Makefile.vc
# 	purify $(CXX) $(LDFLAGS) $(OBJS) $(EXTRA_OBJS) $(EXT_DIR_OBJS) $(LIBS) -L$(OMNETPP_LIB_DIR) $(KERNEL_LIBS) $(USERIF_LIBS) $(SYS_LIBS_PURE) -o $(TARGET).pure

subdirs: $(SUBDIR_TARGETS)

Applications_dir:
	cd Applications && cd && nmake /nologo /f Makefile.vc

Documentation_dir:
	cd Documentation && cd && nmake /nologo /f Makefile.vc

Examples_dir:
	cd Examples && cd && nmake /nologo /f Makefile.vc

Network_dir:
	cd Network && cd && nmake /nologo /f Makefile.vc

NetworkInterfaces_dir:
	cd NetworkInterfaces && cd && nmake /nologo /f Makefile.vc

Nodes_dir:
	cd Nodes && cd && nmake /nologo /f Makefile.vc

PHY_dir:
	cd PHY && cd && nmake /nologo /f Makefile.vc

Tests_dir:
	cd Tests && cd && nmake /nologo /f Makefile.vc

Transport_dir:
	cd Transport && cd && nmake /nologo /f Makefile.vc

Util_dir:
	cd Util && cd && nmake /nologo /f Makefile.vc

index_n.obj: index_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp index_n.cc

index_n.cc: index.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) index.ned

ipsuite-doc_n.obj: ipsuite-doc_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp ipsuite-doc_n.cc

ipsuite-doc_n.cc: ipsuite-doc.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) ipsuite-doc.ned

mpls-doc_n.obj: mpls-doc_n.cc
	$(CXX) -c $(NEDCOPTS) /Tp mpls-doc_n.cc

mpls-doc_n.cc: mpls-doc.ned
	$(NEDC:/=\) -s _n.cc $(INCLUDE_PATH) mpls-doc.ned


#doc: neddoc doxy

#neddoc:
#	@opp_neddoc -a

#doxy: doxy.cfg
#	@doxygen doxy.cfg

clean:
	-del *.obj *_n.cc *_n.h *_m.cc *_m.h $(TARGET)$(EXE_SUFFIX) 2>NUL
	-del *.vec *.sca 2>NUL
	-for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc clean && cd ..

depend:
	$(MAKEDEPEND) $(INCLUDE_PATH) -f Makefile.vc -- *.cc
	-for %%i in ( $(SUBDIRS) ) do cd %%i && nmake /nologo /f Makefile.vc depend && cd ..

re-makemake:
	opp_nmakemake -f -f -n -r -c ipsuiteconfig.vc  #recreate Makefile

# DO NOT DELETE THIS LINE -- make depend depends on it.

